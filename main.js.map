{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/authentication/authentication.component.html","webpack:///./src/app/auth/authentication/authentication.component.scss","webpack:///./src/app/auth/authentication/authentication.component.ts","webpack:///./src/app/auth/services/auth.service.ts","webpack:///./src/app/auth/services/http-client.service.ts","webpack:///./src/app/auth/sign-in/sign-in.component.html","webpack:///./src/app/auth/sign-in/sign-in.component.scss","webpack:///./src/app/auth/sign-in/sign-in.component.ts","webpack:///./src/app/auth/sign-up/sign-up.component.html","webpack:///./src/app/auth/sign-up/sign-up.component.scss","webpack:///./src/app/auth/sign-up/sign-up.component.ts","webpack:///./src/app/auth/user.model.ts","webpack:///./src/app/cart/cart/cart.model.ts","webpack:///./src/app/shared/services/edit-modal.service.ts","webpack:///./src/app/shared/services/error.service.ts","webpack:///./src/app/shared/services/loading.service.ts","webpack:///./src/app/shared/services/orders.service.ts","webpack:///./src/app/shared/services/product-cart.service.ts","webpack:///./src/app/shared/services/products.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"dashboard-dashboard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n   {\r\n     path: 'dashboard',\r\n     loadChildren: './dashboard/dashboard.module#DashboardModule'\r\n   }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div id=\\\"appDev\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n   \\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"#appDev {\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n  overflow: auto; }\\n\\n.container-fluid {\\n  padding: 0;\\n  height: 100%;\\n  overflow: auto; }\\n\\n#signInUp {\\n  width: 50%;\\n  min-height: 300px;\\n  height: auto;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  background: white;\\n  border-radius: 8px;\\n  padding-bottom: 15px; }\\n\\n#signInUp #formsNav {\\n    height: 35px;\\n    line-height: 35px;\\n    border-top-right-radius: 8px;\\n    border-top-left-radius: 8px;\\n    background: #f15151; }\\n\\n#signInUp #formsNav li {\\n      list-style-type: none;\\n      display: inline;\\n      margin-left: 5px; }\\n\\n#signInUp #formsNav a {\\n      color: white; }\\n\\n#signInUp #formsNav .activeTab a {\\n      color: black;\\n      text-decoration: underline; }\\n\\n#signInUp #formsNav .activeTab a:hover {\\n        cursor: pointer;\\n        color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXEFOR1VMQVItTUFYSU1JTExJQU4tQ09VUlNFXFxmb29kLWRlbGl2ZXJ5L3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUM7RUFDRyxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksVUFBVTtFQUNWLFlBQVk7RUFDWixjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG9CQUFvQixFQUFBOztBQVJ4QjtJQVdRLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsNEJBQTRCO0lBQzVCLDJCQUEyQjtJQUMzQixtQkFBNEIsRUFBQTs7QUFmcEM7TUFrQlkscUJBQXFCO01BQ3JCLGVBQWU7TUFDZixnQkFBZ0IsRUFBQTs7QUFwQjVCO01Bd0JZLFlBQVksRUFBQTs7QUF4QnhCO01BOEJnQixZQUFZO01BQ1osMEJBQTBCLEVBQUE7O0FBL0IxQztRQWtDb0IsZUFBZTtRQUNmLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAjYXBwRGV2IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiB9XHJcblxyXG4uY29udGFpbmVyLWZsdWlkIHsgXHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87ICAgIFxyXG59XHJcblxyXG4jc2lnbkluVXAge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDMwMHB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xyXG5cclxuICAgICNmb3Jtc05hdiB7XHJcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xyXG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHJnYigyNDEsIDgxLCA4MSk7XHJcblxyXG4gICAgICAgIGxpIHtcclxuICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICBcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuYWN0aXZlVGFiIHtcclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrOyAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgIFxyXG4gICAgfVxyXG59Il19 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'food-delivery';\r\n\r\n}\r\n","import { HttpClientService } from './auth/services/http-client.service';\r\nimport { ErrorService } from './shared/services/error.service';\r\nimport { LoadingService } from './shared/services/loading.service';\r\nimport { OrdersService } from './shared/services/orders.service';\r\nimport { EditModalService } from './shared/services/edit-modal.service';\r\nimport { ProductService } from './shared/services/products.service';\r\nimport { AuthService } from './auth/services/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProductCart } from './shared/services/product-cart.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AuthModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthService,\r\n    ProductService,\r\n    ProductCart,\r\n    EditModalService,\r\n    OrdersService,\r\n    LoadingService,\r\n    ErrorService,\r\n    HttpClientService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AuthService } from './services/auth.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    isAuthorized: boolean;\r\n\r\n    constructor(private router: Router,\r\n                private route: ActivatedRoute,\r\n                private authService: AuthService) {\r\n        // this.isAuthorized = this.authService.isAuthorized();\r\n    }\r\n\r\n    /**\r\n     * Check user authentication status\r\n     * @param route snapshot\r\n     * @param router state\r\n     * @return return authentication status\r\n     */\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.authService.isAuthorized() && localStorage.getItem('userInfo')) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate([''], {relativeTo: this.route});\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { AuthenticationComponent } from './authentication/authentication.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst authRoutes: Routes = [\r\n    { \r\n        path: 'authentication',\r\n        component: AuthenticationComponent,\r\n        children: [\r\n            { \r\n                path: 'signin',\r\n                component: SignInComponent\r\n            },\r\n            { \r\n                path: 'signup',\r\n                component: SignUpComponent \r\n            },\r\n            { \r\n                path: '',\r\n                redirectTo: '/authentication/signin',\r\n                pathMatch: 'full'\r\n            },\r\n        ]\r\n    },\r\n    { \r\n        path: '',\r\n        redirectTo: '/authentication/signin',\r\n        pathMatch: 'full' \r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(authRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class AuthRoutingModule { }\r\n","import { AuthRoutingModule } from './auth-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthenticationComponent } from './authentication/authentication.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SignInComponent,\r\n        SignUpComponent,\r\n        AuthenticationComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        AuthRoutingModule,\r\n        ReactiveFormsModule,\r\n       // SharedModule\r\n    ],\r\n    exports: [\r\n           \r\n    ]\r\n})\r\n\r\n\r\nexport class AuthModule {}\r\n","module.exports = \"<div id=\\\"signInUp\\\">\\n  <ul id=\\\"formsNav\\\">\\n    <li routerLinkActive=\\\"activeTab\\\">\\n        <a routerLink=\\\"signin\\\">Sign In</a>\\n    </li>\\n\\n    <li routerLinkActive=\\\"activeTab\\\">\\n        <a routerLink=\\\"signup\\\">Sign Up</a>  \\n    </li>\\n  </ul>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\"","module.exports = \"#signInUp {\\n  width: 50%;\\n  min-height: 300px;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  background: white;\\n  border-radius: 8px;\\n  padding-bottom: 15px; }\\n  #signInUp #formsNav {\\n    height: 35px;\\n    line-height: 35px;\\n    border-top-right-radius: 8px;\\n    border-top-left-radius: 8px;\\n    background: #f15151; }\\n  #signInUp #formsNav li {\\n      list-style-type: none;\\n      display: inline;\\n      margin-left: 5px; }\\n  #signInUp #formsNav a {\\n      color: white; }\\n  #signInUp #formsNav .activeTab a {\\n      color: black;\\n      text-decoration: underline; }\\n  #signInUp #formsNav .activeTab a:hover {\\n        cursor: pointer;\\n        color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9hdXRoZW50aWNhdGlvbi9EOlxcQU5HVUxBUi1NQVhJTUlMTElBTi1DT1VSU0VcXGZvb2QtZGVsaXZlcnkvc3JjXFxhcHBcXGF1dGhcXGF1dGhlbnRpY2F0aW9uXFxhdXRoZW50aWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixpQkFBaUI7RUFFakIsY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG9CQUFvQixFQUFBO0VBUnhCO0lBV1EsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQiw0QkFBNEI7SUFDNUIsMkJBQTJCO0lBQzNCLG1CQUE0QixFQUFBO0VBZnBDO01Ba0JZLHFCQUFxQjtNQUNyQixlQUFlO01BQ2YsZ0JBQWdCLEVBQUE7RUFwQjVCO01BMEJZLFlBQVksRUFBQTtFQTFCeEI7TUFnQ2dCLFlBQVk7TUFDWiwwQkFBMEIsRUFBQTtFQWpDMUM7UUFxQ29CLGVBQWU7UUFDZixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2F1dGhlbnRpY2F0aW9uL2F1dGhlbnRpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3NpZ25JblVwIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBtaW4taGVpZ2h0OiAzMDBweDtcclxuICAgIC8vIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcclxuXHJcbiAgICAjZm9ybXNOYXYge1xyXG4gICAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMzVweDtcclxuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xyXG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMjQxLCA4MSwgODEpO1xyXG5cclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG5cclxuICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmFjdGl2ZVRhYiB7XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbiBcclxuXHJcbiBcclxuXHJcbiJdfQ== */\"","import { AuthService } from '../services/auth.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.scss']\r\n})\r\nexport class AuthenticationComponent implements OnInit, OnDestroy {  \r\n  private destroy$ = new Subject();\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.checkAuthenticationStatus();  \r\n  }\r\n\r\n  checkAuthenticationStatus() {\r\n    this.authService.isUserAuthorized\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        authStatus => {\r\n          if (authStatus.authStatus && authStatus.onlineMode) {\r\n            this.router.navigate(['/dashboard/products/pizza']);\r\n          } else { \r\n            this.router.navigate(['']);\r\n          }\r\n        }\r\n      );\r\n\r\n    this.isAuthenticated();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const userData = localStorage.getItem(\"userInfo\");\r\n    if (navigator.onLine && userData) {\r\n      const { login, password } = JSON.parse(userData);\r\n      this.authService.signIn(login, password);\r\n    }    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { HttpClientService } from './http-client.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, Observable, Observer } from 'rxjs';\r\nimport { User } from '../user.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  apiUrl: any = environment.apiUrl;\r\n  isAuthenticated: boolean;\r\n  isUserAuthorized = new Subject<any>();\r\n  userData = new Subject<any>();\r\n  currentUser: any;\r\n  authResults: any;\r\n  \r\n  constructor(private router: Router,\r\n              private http: HttpClient,\r\n              private httpClient: HttpClientService\r\n              ) {}\r\n\r\n  public authenticateUser(login: string, password: string): Observable<any> {\r\n    return Observable.create((authObserver: Observer<any>) => {\r\n      let onlineMode = navigator.onLine;\r\n      if (onlineMode) {\r\n        this.aunthenticateUserOnline(login, password, authObserver);\r\n      } else {\r\n        authObserver.next({ authStatus: false, onlineMode: false });\r\n      }\r\n    });\r\n  }   \r\n  \r\n  public aunthenticateUserOnline(login: string, password: string, authObserver: Observer<any>): void {\r\n    this.httpClient.get(`${this.apiUrl}/users?login=${login}&&password=${password}`)\r\n      .subscribe(\r\n        (authResults: Response) => {\r\n          this.onAunthenticateUserOnlineSuccess(authResults, authObserver);\r\n        },\r\n\r\n        (err: Response) => {\r\n          this.onAunthenticateUserOnlineFailure(err, authObserver); \r\n        }\r\n      );  \r\n  }\r\n\r\n  private onAunthenticateUserOnlineSuccess(authResults, authObserver: Observer<any>): void {\r\n      let onlineMode = navigator.onLine;\r\n      localStorage.setItem('userInfo', JSON.stringify(authResults[0]));\r\n      let authStatus = this.getAuthStatus(authResults) == true ? true : false;\r\n      authObserver.next({ authStatus: authStatus, onlineMode: onlineMode });\r\n  }\r\n\r\n  private onAunthenticateUserOnlineFailure(error, authObserver: Observer<any>): void {\r\n      let onlineMode = navigator.onLine;\r\n      authObserver.error(error);\r\n      authObserver.next({ authStatus: false, onlineMode: onlineMode }); \r\n  }\r\n  \r\n  public signIn(login, password) {\r\n    this.authenticateUser(login, password)\r\n      .subscribe(\r\n        this.onSignInSuccess.bind(this),\r\n        this.onSignInFailure.bind(this)\r\n      );\r\n  }\r\n\r\n  private onSignInSuccess(authStatus): void {\r\n    this.authResults = authStatus;\r\n    this.isUserAuthorized.next(this.authResults);\r\n    console.log(this.authResults);\r\n  }\r\n\r\n  private onSignInFailure(authErr): void {\r\n    this.authResults = authErr;\r\n    console.log(authErr.status)\r\n    console.log(this.authResults);\r\n  }\r\n\r\n  public getAuthStatus(userData): boolean {\r\n    let authStatus;\r\n    if (userData && userData.length > 0 ) {\r\n      this.currentUser = userData[0];\r\n      this.isAuthenticated = true;\r\n      authStatus =  true;\r\n      this.userData.next(userData[0]);\r\n      return true;\r\n    } else {\r\n      console.log('Authentication error!');\r\n      authStatus = false;\r\n    }\r\n\r\n    return authStatus;\r\n  }\r\n\r\n  public updateUserData(): void {\r\n    let onlineMode = navigator.onLine;\r\n    if (onlineMode) {\r\n      this.signIn(this.currentUser.login, this.currentUser.password);\r\n    } else {\r\n      let activeCategory = JSON.parse(localStorage.getItem(\"productList\")).category;\r\n      this.router.navigate([`dashboard/products/${activeCategory}`]);\r\n    }\r\n  }\r\n  \r\n  public logOut(): void {\r\n    this.authResults.authStatus = false;\r\n    this.isUserAuthorized.next(this.authResults);\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('offlineOrders');\r\n    localStorage.removeItem('orderHistory');\r\n  }\r\n \r\n  public signUp(users: User): void {\r\n    this.httpClient.post(`${this.apiUrl}/users`, users)\r\n    .subscribe(\r\n      this.onSignUpSuccess.bind(this),\r\n      this.onSignUpFailure.bind(this)\r\n    );\r\n  }\r\n\r\n  private onSignUpSuccess(res): void {\r\n    this.router.navigate(['']);  \r\n  }\r\n\r\n  private onSignUpFailure(err): void {\r\n    alert('Something went wrong, try again!!!');\r\n  }\r\n\r\n  public checkFieldExistense(field: string, value: string): Observable<any> {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    return this.http.get(`${this.apiUrl}/users?${field}=${value}`, { headers });\r\n  }\r\n\r\n  public isAuthorized(): boolean {\r\n    return this.isAuthenticated;\r\n  }\r\n \r\n  public getCurrentUser(): any {\r\n    return this.currentUser;\r\n  }\r\n \r\n  public checkUserInfo(userData): Observable<any> {\r\n    return Observable.create( (observer: Observer<any>) => {\r\n      const login = this.currentUser.login;\r\n      const password = userData.passwords.password;\r\n      let onlineMode = navigator.onLine;\r\n      \r\n      if (onlineMode) {\r\n        this.getUserInfo(login, password, observer);\r\n      } else {\r\n        observer.error(\"offline mode!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  public getUserInfo(login, password, observer) {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    this.http.get(`${this.apiUrl}/users?login=${login}&&password=${password}`, { headers })\r\n    .subscribe(\r\n      (checkResults: Array<any>) => {\r\n        if (checkResults.length > 0) {\r\n          observer.next(checkResults);\r\n        }\r\n      },\r\n\r\n      (checkErrors) => {  \r\n        observer.error('User not found! ' + checkErrors);\r\n      }\r\n    )  \r\n  }\r\n\r\n  public updateUserInfo(userData): Observable<any> {\r\n    const user = new User(userData.firstName, userData.lastName, \r\n                        this.currentUser.login, userData.passwords.password,\r\n                        userData.phone, this.currentUser.email, userData.address);\r\n    \r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    return this.http.put(`${this.apiUrl}/users/${this.currentUser.id}`,  user, { headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  constructor(private http: HttpClient) { }\n\n  private createAuthorizationHeaders(headers: HttpHeaders): void {\n    headers.append('Authorization', 'Basic' + btoa('login:password'));\n  }\n\n  public get(url: string): Observable<any> {\n    let headers = new HttpHeaders({'Content-type': 'application/json'});\n    this.createAuthorizationHeaders(headers);\n    return this.http.get(url, { headers: headers});\n  }\n\n  public post(url: string, data): Observable<any> {\n    let headers = new HttpHeaders({'Content-type': 'application/json'});\n    this.createAuthorizationHeaders(headers);\n    return this.http.post(url, data, { headers:headers });\n  }\n}\n","module.exports = \"<div class=\\\"col-xs-12 col-md-12\\\">\\r\\n  <form id=\\\"signIn\\\"\\r\\n        #form=ngForm\\r\\n        (ngSubmit)=\\\"onLogin(form)\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"login\\\">\\r\\n        Login:\\r\\n      <input type=\\\"text\\\"\\r\\n             placeholder=\\\"Enter login\\\"\\r\\n             class=\\\"form-control\\\"\\r\\n             id=\\\"login\\\"\\r\\n             name=\\\"login\\\"\\r\\n             required\\r\\n             login\\r\\n             ngModel\\r\\n             #login=\\\"ngModel\\\">\\r\\n      </label>\\r\\n    </div>\\r\\n\\r\\n    <p *ngIf=\\\"!login.valid && login.touched\\\" class=\\\"validationErrors\\\">Login is not valid!</p>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"password\\\">\\r\\n        Password:\\r\\n      <input type=\\\"password\\\"\\r\\n             placeholder=\\\"Enter password\\\"\\r\\n             class=\\\"form-control\\\"\\r\\n             id=\\\"password\\\"\\r\\n             required\\r\\n             password\\r\\n             #password=\\\"ngModel\\\"\\r\\n             name=\\\"password\\\"\\r\\n             ngModel>\\r\\n      </label>\\r\\n    </div>\\r\\n    <p *ngIf=\\\"!password.valid && password.touched\\\" class=\\\"validationError\\\">Password is not valid!</p>\\r\\n    <p *ngIf=\\\"!authResults.authStatus && authResults.onlineMode && password.touched\\\" class=\\\"validationError\\\">Your login and password are incorect!</p>\\r\\n    <p *ngIf=\\\"!authResults.onlineMode\\\" class=\\\"validationError\\\">There's no internet connection!</p>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            [disabled]=\\\"!form.valid\\\">\\r\\n      Log In\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n \\r\\n\"","module.exports = \"#signIn {\\n  margin: 0 auto; }\\n\\n.validationError {\\n  color: red;\\n  font-weight: 600; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWduLWluL0Q6XFxBTkdVTEFSLU1BWElNSUxMSUFOLUNPVVJTRVxcZm9vZC1kZWxpdmVyeS9zcmNcXGFwcFxcYXV0aFxcc2lnbi1pblxcc2lnbi1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQztFQUNJLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxVQUFVO0VBQ1YsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAjc2lnbkluIHtcclxuICAgICBtYXJnaW46IDAgYXV0bzsgXHJcbiB9XHJcblxyXG4gLnZhbGlkYXRpb25FcnJvciB7XHJcbiAgICAgY29sb3I6IHJlZDtcclxuICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gfSJdfQ== */\"","import { LoadingService } from '../../shared/services/loading.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\r\nimport { Subscription } from 'rxjs';\r\n \r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit, OnDestroy {\r\n  authStatus = new Subscription();\r\n  authResults = {\r\n    authStatus: true,\r\n    onlineMode: navigator.onLine\r\n  };\r\n   \r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.subscribeToAuthResults();\r\n  }\r\n\r\n  subscribeToAuthResults() {\r\n    this.authStatus = this.authService.isUserAuthorized\r\n      .subscribe(this.onUserAuthorizedSuccess.bind(this));\r\n  }\r\n\r\n  onUserAuthorizedSuccess(authStatus) {\r\n    this.authResults  = authStatus;\r\n    console.log(authStatus);\r\n  }\r\n\r\n/**\r\n * Provide user login using appropriate credentials\r\n * @param {NgForm} login and password.\r\n */\r\n  onLogin(form: NgForm) {\r\n    const { login, password } = form.value;\r\n    const credentials = {\r\n      \"login\": login,\r\n      \"password\": password\r\n    };\r\n    \r\n    this.authService.signIn(login, password);\r\n   \r\n    if (this.authService) {\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(credentials));\r\n    }      \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatus.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"col-xs-12 col-md-12\\\">\\r\\n  <form id=\\\"signUp\\\"\\r\\n        [formGroup]=\\\"registrationForm\\\"\\r\\n        (ngSubmit)=\\\"onSignUp()\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"First Name\\\">\\r\\n            First Name:\\r\\n\\r\\n          <input type=\\\"text\\\"\\r\\n                 placeholder=\\\"Enter First Name\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"firstName\\\"\\r\\n                 name=\\\"firstName\\\"\\r\\n                 formControlName=\\\"firstName\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n        \\r\\n        <p *ngIf=\\\"!formField.get('firstName').valid && formField.get('firstName').touched\\\" class=\\\"validationError\\\">First name is not valid!</p>\\r\\n        <p *ngIf=\\\"formField.get('firstName').errors && formField.get('firstName').touched\\\" class=\\\"validationError\\\">Minimal length should be at least 4!</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"Last Name\\\">\\r\\n            Last Name:\\r\\n\\r\\n          <input type=\\\"text\\\"\\r\\n                 placeholder=\\\"Enter Last Name\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"lastName\\\"\\r\\n                 name=\\\"lastName\\\"\\r\\n                 formControlName=\\\"lastName\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n\\r\\n        <p *ngIf=\\\"!formField.get('lastName').valid && formField.get('lastName').touched\\\" class=\\\"validationError\\\">Last name is not valid!</p>\\r\\n        <p *ngIf=\\\"formField.get('lastName').errors && formField.get('lastName').touched\\\" class=\\\"validationError\\\">Minimal length should be at least 4!</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"login\\\">\\r\\n            Login:\\r\\n\\r\\n          <input type=\\\"text\\\"\\r\\n                 placeholder=\\\"Enter login\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"login\\\"\\r\\n                 name=\\\"login\\\"\\r\\n                 formControlName=\\\"login\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n\\r\\n        <p *ngIf=\\\"formField.get('login').errors && formField.get('login').touched \\\" class=\\\"validationError\\\">Login isn't valid!</p>\\r\\n        <p *ngIf=\\\"formField.get('login')?.errors?.minlength && formField.get('login').touched \\\" class=\\\"validationError\\\">Min length should be 4 !</p>\\r\\n        <p *ngIf=\\\"formField.get('login')?.errors?.fieldIsForbidden && formField.get('login').touched\\\" class=\\\"validationError\\\">User with such login is already exist!</p>\\r\\n        <p *ngIf=\\\"formField.get('login')?.errors?.isNetworkEnabled && formField.get('login').touched\\\" class=\\\"validationError\\\">There's no internet connection!</p>\\r\\n        \\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"phone\\\">\\r\\n          Phone:\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"phone\\\"\\r\\n               name=\\\"phone\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Enter phone\\\"\\r\\n               formControlName=\\\"phone\\\">\\r\\n        </label>\\r\\n      </div>\\r\\n\\r\\n      <p *ngIf=\\\"formField.get('phone').errors && formField.get('phone').touched \\\" class=\\\"validationError\\\">Phone isn't valid!</p>\\r\\n      <p *ngIf=\\\"formField.get('phone')?.errors?.minlength && formField.get('phone').touched \\\" class=\\\"validationError\\\">Min length should be 10 !</p>\\r\\n    </div>\\r\\n\\r\\n    <div formGroupName = passwords class=\\\"col-md-12 col-xs-12\\\" >\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">\\r\\n            Password:\\r\\n\\r\\n          <input type=\\\"text\\\"\\r\\n                id=\\\"password\\\"\\r\\n                name=\\\"password\\\"\\r\\n                type=\\\"password\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Enter password\\\"\\r\\n                formControlName=\\\"password\\\">\\r\\n          </label>\\r\\n          </div>\\r\\n          \\r\\n          <p *ngIf=\\\"formField.get('passwords.password').errors && formField.get('passwords.password').touched \\\" class=\\\"validationError\\\">Password isn't valid!</p>\\r\\n          <p *ngIf=\\\"formField.get('passwords.password').password?.errors?.minlength && formField.get('passwords.password').touched \\\" class=\\\"validationError\\\">Min length should be 4 !</p>\\r\\n          <p *ngIf=\\\"formField.get('passwords')?.errors?.doesMatchPassword && formField.get('passwords').touched \\\" class=\\\"validationError\\\">Passwords don't match!</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"passwordRepeat\\\">\\r\\n              Repeat password:\\r\\n\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"passwordRepeat\\\"\\r\\n                   name=\\\"passwordRepeat\\\"\\r\\n                   type=\\\"password\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   placeholder=\\\"Repeat password\\\"\\r\\n                   formControlName=\\\"passwordRepeat\\\">\\r\\n            </label>\\r\\n          </div>\\r\\n\\r\\n          <p *ngIf=\\\"formField.get('passwords.passwordRepeat').errors && formField.get('passwords.passwordRepeat').touched \\\" class=\\\"validationError\\\">Password isn't valid!</p>\\r\\n          <p *ngIf=\\\"formField.get('passwords.passwordRepeat')?.errors?.minlength && formField.get('passwords.passwordRepeat').touched \\\" class=\\\"validationError\\\">Min length should be 4 !</p>\\r\\n          <p *ngIf=\\\"formField.get('passwords')?.errors?.doesMatchPassword && formField.get('passwords').touched \\\" class=\\\"validationError\\\">Passwords don't match!</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">\\r\\n          Email:\\r\\n        <input type=\\\"text\\\"\\r\\n               placeholder=\\\"Enter email\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               id=\\\"email\\\"\\r\\n               name=\\\"email\\\"\\r\\n               formControlName=\\\"email\\\">\\r\\n        </label>\\r\\n      </div>\\r\\n\\r\\n      <p *ngIf=\\\"formField.get('email').errors && formField.get('email').touched \\\" class=\\\"validationError\\\">Email isn't valid!</p>\\r\\n      <p *ngIf=\\\"formField.get('email')?.errors?.minlength && formField.get('email').touched \\\" class=\\\"validationError\\\">Min length should be 4 !</p>\\r\\n      <p *ngIf=\\\"formField.get('email')?.errors?.fieldIsForbidden && formField.get('email').touched \\\" class=\\\"validationError\\\">User with such email is already exist!</p>\\r\\n      <p *ngIf=\\\"formField.get('email')?.errors?.email && formField.get('email').touched \\\" class=\\\"validationError\\\">Email doensn't much the pattern!</p>\\r\\n      <p *ngIf=\\\"formField.get('email')?.errors?.isNetworkEnabled && formField.get('email').touched \\\" class=\\\"validationError\\\">There's no internet connection!</p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"address\\\">\\r\\n          Address:\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"address\\\"\\r\\n               name=\\\"address\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Enter address\\\"\\r\\n               formControlName=\\\"address\\\">\\r\\n        </label>\\r\\n      </div>\\r\\n\\r\\n      <p *ngIf=\\\"formField.get('address').errors && formField.get('address').touched \\\" class=\\\"validationError\\\">Address isn't valid!</p>\\r\\n      <p *ngIf=\\\"formField.get('address')?.errors?.minlength && formField.get('address').touched \\\" class=\\\"validationError\\\">Min length should be 4 !</p>\\r\\n    </div>\\r\\n\\r\\n    </div>\\r\\n    <p *ngIf=\\\"!onlineMode\\\" class=\\\"validationError\\\">There's no internet connection!</p>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            >\\r\\n      Sign Up\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n<!--[disabled]=\\\"!registrationForm.valid\\\"-->\"","module.exports = \".validationError {\\n  color: red;\\n  font-weight: 600;\\n  font-size: 12px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWduLXVwL0Q6XFxBTkdVTEFSLU1BWElNSUxMSUFOLUNPVVJTRVxcZm9vZC1kZWxpdmVyeS9zcmNcXGFwcFxcYXV0aFxcc2lnbi11cFxcc2lnbi11cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmFsaWRhdGlvbkVycm9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG59Il19 */\"","import { User } from './../user.model';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  userPassword: string;\r\n  userRepeatedPassword: string;\r\n  onlineMode: boolean;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.onlineMode = navigator.onLine;\r\n  }\r\n\r\n/**\r\n * Initialize 'sign up' form's controls and appropriate validators\r\n */\r\n  private initForm() {\r\n    this.registrationForm = new FormGroup({\r\n      \"firstName\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      \"lastName\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      \"login\": new FormControl('', [Validators.required, Validators.minLength(4)], this.checkDataUniquenessByField.bind(this)),\r\n      passwords: new FormGroup({\r\n        \"password\": new FormControl('', [Validators.required, Validators.minLength(4), ]),\r\n        \"passwordRepeat\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n        }, {\r\n          validators: this.validatePasswords.bind(this) \r\n        }  \r\n    ),\r\n      \"phone\": new FormControl('', [Validators.required, Validators.minLength(10)]),\r\n      \"email\": new FormControl('', [Validators.required, Validators.email, Validators.minLength(4)], this.checkDataUniquenessByField.bind(this)),\r\n      \"address\": new FormControl('', [Validators.required, Validators.minLength(5)])\r\n    });\r\n  }\r\n\r\n  get formField() {\r\n    return this.registrationForm;\r\n  }\r\n\r\n/**\r\n * Check existence user with the same login\r\n * @param {FormControl} user's login\r\n * @return {Promise | Observable} returns checking results\r\n */\r\n  checkDataUniquenessByField(control: FormControl): Observable<any> {      \r\n    const onlineMode = navigator.onLine;\r\n    const maxFieldLength = 4;\r\n\r\n    const forbiddenField = Observable.create( (forbiddenObserver: Observer<any>) => {\r\n      const keyField = control.value;\r\n      console.log(this.registrationForm);\r\n      const fieldName = this.searchKeyField(control, keyField);\r\n\r\n      if (onlineMode && keyField.length >= maxFieldLength) {\r\n          this.authService.checkFieldExistense(fieldName, keyField).subscribe(\r\n            \r\n            (fieldCheckingRes: Response) => {\r\n              if (fieldCheckingRes[0]) {\r\n                if (fieldCheckingRes[0][fieldName] == keyField) {\r\n                  forbiddenObserver.next({'fieldIsForbidden': true, 'isNetworkEnabled': false});\r\n                  forbiddenObserver.complete();          \r\n                }\r\n              } else {\r\n                forbiddenObserver.next(null);\r\n                forbiddenObserver.complete();\r\n              }\r\n            },\r\n  \r\n            (error: Response) => {\r\n              forbiddenObserver.error(error);\r\n              forbiddenObserver.complete();\r\n            }\r\n          );\r\n      } \r\n  });\r\n\r\n    return forbiddenField;\r\n  }\r\n\r\n  searchKeyField(control: FormControl, keyField) {\r\n    const field = control.value;\r\n    let searchedField;\r\n    let formFields = Object.entries(this.registrationForm.controls);\r\n    \r\n    for(let key of formFields) {\r\n      if (key[1].value == field) {\r\n        searchedField = key[0];\r\n      }\r\n    }\r\n    return searchedField; \r\n  }\r\n  \r\n /**\r\n  * Compare two passwords which were entered by user in appropriate fields\r\n  * @param {FormGroup} users' passwords\r\n  * @return {null || Obj} returns checking results\r\n  */ \r\n  validatePasswords(registrationFormGroup: FormGroup) {\r\n    const password = registrationFormGroup.controls.password.value;\r\n    const repeatPassword = registrationFormGroup.controls.passwordRepeat.value;\r\n\r\n    if (repeatPassword.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    if (repeatPassword !== password) {\r\n        return {\r\n            doesMatchPassword: true\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Create new user object and sign up it using 'authService'\r\n */\r\n  onSignUp() {\r\n    this.onlineMode = navigator.onLine;\r\n    const userInfo = this.registrationForm.value;\r\n    const newUser = new User(userInfo.firstName, userInfo.lastName,\r\n                           userInfo.login, userInfo.passwords.password,\r\n                           userInfo.phone, userInfo.email,\r\n                           userInfo.address);\r\n    \r\n    if (this.registrationForm.valid && this.onlineMode) {\r\n      this.authService.signUp(newUser);\r\n    } else if (!this.onlineMode && !this.registrationForm.valid) {\r\n      this.registrationForm.patchValue({login: \"\", email: \"\"});\r\n    }                  \r\n  }\r\n}\r\n","import { Cart } from './../cart/cart/cart.model';\r\n\r\nexport class User {\r\n    public userId: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public login: string;\r\n    public password: string;\r\n    public phone: string;\r\n    public email: string;\r\n    public address: string;\r\n\r\n    constructor(fName: string,  lName: string, login: string,\r\n                password: string, phone: string,\r\n                email: string, address: string) {\r\n        this.firstName = fName;\r\n        this.lastName = lName;\r\n        this.login = login;\r\n        this.password = password;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.address = address;\r\n        this.userId = this.randomId(1000, 1);\r\n    }\r\n\r\n    randomId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}\r\n","import { Product } from 'src/app/shared/product.model';\r\n\r\nexport class Cart {\r\n    public products: Array<Product>;\r\n    public totalPrice: number;\r\n    public id: number;\r\n    public userId: number;\r\n    public cartId: number;\r\n\r\n    constructor(products?: Array<Product>) {\r\n        this.products = products ? products : [];\r\n        this.cartId = this.randomId(1, 10000);\r\n        this.totalPrice = 0;\r\n    }\r\n\r\n    setUserId(userData) {\r\n        this.id = userData.id;\r\n        this.userId = userData.userId;\r\n    }\r\n\r\n    setCartId(id) {\r\n        this.cartId = id;\r\n    }\r\n\r\n    getCartId() {\r\n        return this.cartId;\r\n    }\r\n\r\n    getCart(): Array<Product> {\r\n        return this.products;\r\n    }\r\n\r\n    setProducts(products) {\r\n        this.products = products;\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        const productId = product.id;\r\n       \r\n        if (!this.checkForDublicates(productId)) {\r\n            product[\"productQuantity\"] = product.productQuantity;\r\n            this.products.push(product);\r\n        } else {\r\n            this.products.forEach( item => {\r\n                if (item.id == productId ) {\r\n                    item[\"productQuantity\"] += product.productQuantity;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.calculateTotalPrice();    \r\n    }\r\n\r\n    deleteProductById(id) {\r\n        let deleteWithId;\r\n        this.products.forEach( (item, index) => {\r\n            if ( item.id == id ) {\r\n                deleteWithId = index;\r\n            }\r\n        });\r\n\r\n        this.products.splice(deleteWithId, 1);\r\n    }\r\n\r\n    addOneProductToCart(id) {\r\n        this.products.forEach( product => {\r\n            if (product.id == id) {\r\n                ++product.productQuantity;\r\n            }\r\n        });  \r\n    }\r\n\r\n    deleteOneProductFromCart(id) {\r\n        this.products.forEach( product => {\r\n            if (product.id == id && product.productQuantity != 1) {\r\n                --product.productQuantity;\r\n            }\r\n        });\r\n    }\r\n\r\n    checkForDublicates(id): boolean {\r\n        let isDublicated = false;\r\n        this.products.forEach( item => {\r\n            if (item.id == id) {\r\n                isDublicated = true;\r\n            }\r\n        });\r\n    \r\n        return isDublicated;\r\n    }\r\n\r\n    calculateTotalPrice() {\r\n        let price = 0;\r\n        this.products.forEach( item => {\r\n            price += item.productPrice * item.productQuantity;\r\n        });\r\n\r\n        this.totalPrice = price;\r\n    }\r\n\r\n    getTotalPrice() {\r\n        this.calculateTotalPrice();\r\n        return this.totalPrice;\r\n    }  \r\n\r\n    calculateProductsQuantity(): number {\r\n        let productQuantity = 0;\r\n\r\n        this.products.forEach( item => {\r\n            productQuantity += item.productQuantity;\r\n        });\r\n\r\n        return productQuantity;\r\n    }\r\n\r\n    cleanCart() {\r\n        this.products = [];\r\n    }\r\n\r\n    randomId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EditModalService {\r\n    editMode: boolean = false;\r\n    onEditChange = new Subject();\r\n    \r\n    constructor() {\r\n        this.onEditChange.next(this.editMode);\r\n    }\r\n\r\n/**\r\n * Toggle 'edit profile' popup\r\n */    \r\n    toggleEditMode() {\r\n        this.editMode = !this.editMode;\r\n        this.onEditChange.next(this.editMode);\r\n    }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { LoadingService } from './loading.service';\r\nimport { Injectable, ErrorHandler, Injector} from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { EditModalService } from './edit-modal.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService implements ErrorHandler {\r\n  private errorStatus: number;\r\n  private errorMsg: string;\r\n  errorDetails = new Subject();\r\n  constructor(private router: Router) { }\r\n\r\n  handleError(error: Response) {\r\n      this.errorStatus = error.status;\r\n      this.errorMsg = error.statusText;\r\n      this.errorDetails.next({\r\n        errorCode: this.errorStatus,\r\n        errorMsg: this.errorMsg\r\n      });\r\n      \r\n      this.router.navigate(['dashboard/error']);\r\n  }\r\n\r\n  getErrorInfo() {\r\n      return {\r\n        errorCode: this.errorStatus,\r\n        errorMsg: this.errorMsg\r\n      }\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { EditModalService } from './edit-modal.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  isLoadingEnabled: boolean = false;\r\n  onLoadingChange = new Subject();\r\n\r\n  constructor(private editModal: EditModalService) {\r\n    this.onLoadingChange.next(this.isLoadingEnabled);\r\n  }\r\n\r\n  toggleLoading() {\r\n    this.isLoadingEnabled = !this.isLoadingEnabled;\r\n    this.onLoadingChange.next(this.isLoadingEnabled);\r\n  }\r\n\r\n}\r\n","import { LoadingService } from './loading.service';\r\nimport { ProductCart } from './product-cart.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../auth/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Order } from 'src/app/cart/order.model';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { EditModalService } from './edit-modal.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ErrorService } from './error.service';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class OrdersService {\r\n  apiUrl: any = environment.apiUrl;\r\n  order: Order;\r\n  offlineOrders: Array<any> = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private http: HttpClient,\r\n    private productCart: ProductCart,\r\n    private router: Router,\r\n    private loadingService: LoadingService,\r\n    private editModal: EditModalService,\r\n    private errorService: ErrorService\r\n  ) {\r\n    this.checkOfflineOrders();\r\n  }\r\n\r\n  public makeAnOrder(order: Order) {\r\n    const headers = new HttpHeaders({ \"Content-type\": \"application/json\" });\r\n    const id = this.authService.getCurrentUser().id;\r\n    order.setUserId(id);\r\n    console.log(order);\r\n    this.order = order;\r\n    if (navigator.onLine) {\r\n      this.order.setOrderStatus(\"done\");\r\n      this.http\r\n        .post(`${this.apiUrl}/orders`, order, { headers })\r\n        .subscribe(\r\n          this.onMakeOrderSuccess.bind(this),\r\n          this.onMakeOrderError.bind(this)\r\n        );\r\n    } else {\r\n      this.handleOfflineOrderOperation(order);\r\n    }\r\n  }\r\n\r\n  public handleOfflineOrderOperation(order: Order): void {\r\n    this.order.setOrderStatus(\"pending\");\r\n    this.offlineOrders.push(order);\r\n    localStorage.setItem(\"offlineOrders\", JSON.stringify(this.offlineOrders));\r\n\r\n    this.productCart.cleanCart();\r\n    this.router.navigate([\"dashboard/order-results\", \"offlineMode\"]);\r\n  }\r\n\r\n  private checkOfflineOrders(): void {\r\n    let localOrders = JSON.parse(localStorage.getItem(\"offlineOrders\"));\r\n    const offlineOrders = localOrders ? localOrders : [];\r\n    this.offlineOrders = offlineOrders.length > 0 ? offlineOrders : [];\r\n  }\r\n\r\n  private syncOfflineOrdersWithServer(): void {\r\n    const headers = new HttpHeaders({ \"Content-type\": \"application/json\" });\r\n    let localOrders = JSON.parse(localStorage.getItem(\"offlineOrders\"));\r\n    const offlineOrders = localOrders ? localOrders : [];\r\n    if (offlineOrders.length > 0) {\r\n      this.offlineOrders.forEach((item: Order) => {\r\n        this.http.post(`${this.apiUrl}/orders`, item, { headers }).subscribe();\r\n      });\r\n    }\r\n\r\n    localStorage.removeItem(\"offlineOrders\");\r\n    this.offlineOrders = [];\r\n  }\r\n\r\n  private onMakeOrderSuccess(orderStatus): void {\r\n    this.productCart.cleanCart();\r\n    this.syncOfflineOrdersWithServer();\r\n    this.router.navigate([\"dashboard/order-results\", \"orderSuccess\"]);\r\n  }\r\n\r\n  private onMakeOrderError(error): void {\r\n    this.productCart.cleanCart();\r\n    this.router.navigate([\"dashboard/order-results\", \"orderFailure\"]);\r\n  }\r\n\r\n  public submitOrderFromOrderHistory(order: Order): void {\r\n    const headers = new HttpHeaders({ \"Content-type\": \"application/json\" });\r\n    order.orderStatus = 'done';\r\n    if (navigator.onLine) {\r\n      this.http.put(`${this.apiUrl}/orders/${order['id']}`, order, { headers }).subscribe(\r\n        this.onSubmitPendingOrderSuccess.bind(this),\r\n        this.onSubmitPendingOrderFailure.bind(this)\r\n      );\r\n    } else {\r\n      this.onSubmitPendingOrderFailure();\r\n    }\r\n  }\r\n\r\n  private onSubmitPendingOrderSuccess(): void {\r\n    this.router.navigate([\"dashboard/order-results\", \"submitSuccess\"]);  \r\n  }\r\n\r\n  private onSubmitPendingOrderFailure(): void {\r\n    this.router.navigate([\"dashboard/order-results\", \"submitFailure\"]);\r\n  }\r\n  public getLastOrder(): Order {\r\n    return this.order;\r\n  }\r\n\r\n  public getOrders(): Observable<any> {\r\n    const ordersObservable = Observable.create((observer: Observer<any>) => {\r\n      let onlineMode = navigator.onLine;\r\n\r\n      if (onlineMode) {\r\n        this.getOrdersFromServer(observer);\r\n      } else {\r\n        this.getOrdersFromLocalStorage(observer);\r\n      }\r\n    });\r\n\r\n    return ordersObservable;\r\n  }\r\n\r\n  public getOrdersFromServer(observer: Observer<any>): void {\r\n    const headers = new HttpHeaders({ \"Content-type\": \"application/json\" });\r\n    const id = this.authService.getCurrentUser().id;\r\n    this.http.get(`${this.apiUrl}/orders?userId=${id}`, { headers }).subscribe(\r\n      (orders: Array<any>) => {\r\n        localStorage.setItem(\"orderHistory\", JSON.stringify(orders));\r\n        observer.next(orders);\r\n      },\r\n\r\n      (error: Response) => {\r\n        observer.error(error);\r\n        this.errorService.handleError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public getOrdersFromLocalStorage(observer: Observer<any>): void {\r\n    let localOrderHistory = JSON.parse(localStorage.getItem(\"orderHistory\"));\r\n    if (localOrderHistory.length > 0) {\r\n      observer.next(localOrderHistory);\r\n    } else {\r\n      observer.error(\"offline mode\");\r\n    }\r\n  }\r\n}\r\n","import { Cart } from '../../cart/cart/cart.model';\r\nimport { AuthService } from '../../auth/services/auth.service';\r\nimport { Injectable  } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Product } from '../product.model';\r\nimport { Subject, Subscription, Observable } from 'rxjs';\r\nimport { Order } from 'src/app/cart/order.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ErrorService } from './error.service';\r\n\r\n\r\n@Injectable()\r\nexport class ProductCart {\r\n    cart = new Cart();\r\n    onProductAdded = new Subject<any>();\r\n    gettingProducts = new Subscription();\r\n    apiUrl: any = environment.apiUrl;\r\n\r\n    constructor(private authService: AuthService, private http: HttpClient, private errorService: ErrorService) {  \r\n        this.checkCartExistenseByUserId();\r\n        this.getCartFromServer();                \r\n    }\r\n    \r\n/**\r\n * Checking cart existense on the server\r\n */\r\n    checkCartExistenseByUserId() {\r\n        if (navigator.onLine) {\r\n            this.cart.setUserId(this.authService.getCurrentUser());\r\n            const userId = this.authService.getCurrentUser().id;\r\n            const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n            this.http.get(`${this.apiUrl}/cart?id=${userId}`, { headers })\r\n                .subscribe(\r\n                    this.onCheckCartExistenseSuccess.bind(this),\r\n                    this.onCheckCartExistenseFailure.bind(this)\r\n                );\r\n        }        \r\n    }\r\n\r\n/**\r\n * Create cart on the server if it doesn't exist\r\n */\r\n    onCheckCartExistenseSuccess(response) {\r\n        if (response.length == 0) {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.post(`${this.apiUrl}/cart`, this.cart, { headers })\r\n            .subscribe(\r\n                this.onCreateCartSuccess.bind(this),\r\n                this.onCreateCartFailure.bind(this)\r\n            );   \r\n        } \r\n    }\r\n\r\n    onCheckCartExistenseFailure(error: Response) {\r\n        this.errorService.handleError(error);\r\n    }\r\n\r\n    onCreateCartSuccess(successRes) {\r\n        console.log('Cart is created!');\r\n        console.log(successRes);\r\n    }\r\n\r\n    onCreateCartFailure(error) {\r\n        console.log(\"Something went wrong while creating cart!\");\r\n        //this.errorService.handleError(error); \r\n    }\r\n\r\n /**\r\n  * Add products to the cart and sync it with server\r\n  */     \r\n    addProducts(product: Product) {\r\n        console.log(product);\r\n        console.log(this.cart);\r\n        let onlineMode = navigator.onLine;\r\n        this.cart.addProduct(product);\r\n        this.onProductAdded.next(this.cart.getCart());\r\n        \r\n        if (onlineMode) {\r\n            this.synchCartWithServer();\r\n            localStorage.setItem('productCart', JSON.stringify(this.cart));\r\n        } else {\r\n            localStorage.setItem('productCart', JSON.stringify(this.cart));\r\n        }\r\n    }\r\n\r\n /**\r\n  * Sync current cart with user's carton the server\r\n  */   \r\n    synchCartWithServer() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.put(`${this.apiUrl}/cart/${this.cart.id}`, this.cart, { headers })\r\n            .subscribe(\r\n               this.onSynchCartWithServerSuccess.bind(this),\r\n               this.onSynchCartWithServerFailure.bind(this)\r\n            );\r\n    }\r\n\r\n    onSynchCartWithServerSuccess(synchStatus) {\r\n        console.log('Cart is successfully synchronized with server!');\r\n        console.log(synchStatus);\r\n    }\r\n    \r\n    onSynchCartWithServerFailure(error) {\r\n        console.log('Error while synchronizing product cart with server!');\r\n        this.errorService.handleError(error);\r\n    }\r\n\r\n /**\r\n  * Get appropriate cart from server\r\n  */   \r\n    getCartFromServer() {\r\n        if (navigator.onLine) {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        const userId = this.authService.getCurrentUser().id;\r\n        this.gettingProducts = this.http.get(`${this.apiUrl}/cart/${userId}`, { headers })\r\n            .subscribe(\r\n                this.onGetCartSuccess.bind(this),\r\n                this.onGetCartFailure.bind(this)\r\n            );\r\n        }\r\n    }\r\n\r\n    onGetCartSuccess(cart) {\r\n         let localCart = JSON.parse(localStorage.getItem(\"productCart\")) ? JSON.parse(localStorage.getItem(\"productCart\")) : new Cart();\r\n         let localCartInstanse = new Cart(localCart[\"products\"]);\r\n         this.setProductsToCartFromServerOrLocalSt(localCartInstanse ? localCart : cart);\r\n         this.onProductAdded.next(this.cart.getCart());\r\n         localStorage.setItem('productCart', JSON.stringify(this.cart));     \r\n    }\r\n\r\n    setProductsToCartFromServerOrLocalSt(cart) {\r\n        this.cart.setProducts(cart[\"products\"]);\r\n        this.cart.setCartId(cart[\"cartId\"]);\r\n    }\r\n\r\n    onGetCartFailure(error) {\r\n        console.log(error);\r\n        alert('Error while getting cart from server!');\r\n        this.errorService.handleError(error);\r\n    }\r\n\r\n    getCartFromLocalStorage() {\r\n        let cart = JSON.parse(localStorage.getItem('productCart'));\r\n        this.cart.setProducts(cart[\"products\"]);\r\n        this.cart.setCartId(cart[\"cartId\"]);\r\n        this.onProductAdded.next(this.cart);\r\n        return this.cart.getCart();\r\n    }\r\n  \r\n/**\r\n * Calculate product's quantity in the cart\r\n * @return {number} product's quantity\r\n */    \r\n    calculateProductsQuantity(): number {\r\n        return this.cart.calculateProductsQuantity();\r\n    }\r\n\r\n/**\r\n * Get products from cart\r\n * @return {Cart} product's cart\r\n */    \r\n    getProducts(): Array<Product> {\r\n        return this.cart.getCart();\r\n    }\r\n\r\n    getCartId(): number {\r\n        return this.cart.getCartId();\r\n    }\r\n\r\n\r\n/**\r\n * Delete product with appropriate number\r\n * @param {number} product's number \r\n */    \r\n    deleteProductById(id) {\r\n        this.cart.deleteProductById(id);\r\n        this.onProductAdded.next(this.cart.getCart());\r\n        this.syncCartWithServerAndLocalStorage();\r\n    }\r\n\r\n    syncCartWithServerAndLocalStorage() {\r\n        let onlineMode = navigator.onLine;\r\n        \r\n        if (onlineMode) {\r\n            this.synchCartWithServer();\r\n        }\r\n        localStorage.setItem('productCart', JSON.stringify(this.cart));   \r\n    }\r\n\r\n/**\r\n * Increase product quantity on 1 for appropriate product in the cart\r\n * @param {number} product's id \r\n */    \r\n    addOneProductToCart(id) {\r\n        this.cart.addOneProductToCart(id);\r\n        this.onProductAdded.next(this.cart.getCart());\r\n        this.syncCartWithServerAndLocalStorage();\r\n    }\r\n\r\n/**\r\n * Decrease product quantity on 1 for appropriate product in the cart\r\n * @param {number} product's id \r\n */    \r\n    deleteOneProductFromCart(id) {\r\n        this.cart.deleteOneProductFromCart(id);\r\n        this.onProductAdded.next(this.cart.getCart());\r\n        this.syncCartWithServerAndLocalStorage();\r\n    }\r\n\r\n /**\r\n  * Get total cart's price\r\n  * @return {number} total price\r\n  */   \r\n    getTotalPrice() {\r\n        return this.cart.getTotalPrice();\r\n    }  \r\n\r\n /**\r\n  * Get product cart\r\n  * @return {Cart} cart\r\n  */   \r\n    getProductCart(): Cart {\r\n        return this.cart;\r\n    }\r\n\r\n /**\r\n  * Clear product cart\r\n  */   \r\n    cleanCart() {\r\n        this.cart.cleanCart();\r\n        this.syncCartWithServerAndLocalStorage();\r\n        this.onProductAdded.next(this.cart);\r\n    }\r\n    \r\n}\r\n","import { ErrorService } from './error.service';\r\nimport { LoadingService } from './loading.service';\r\nimport { Product } from '../product.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpHeaderResponse } from '@angular/common/http';\r\nimport { Observable, Subscription, Subject, combineLatest, Observer } from 'rxjs';\r\nimport { mapTo, catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { merge } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { EditModalService } from './edit-modal.service';\r\nimport { throwError } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    apiUrl: string = environment.apiUrl;\r\n    selectedProduct;\r\n    results = [];\r\n    products = {};\r\n    newProducts = new Subject();\r\n\r\n    constructor(private http: HttpClient) {}\r\n \r\n /**\r\n  * Save products on the server\r\n  */   \r\n    saveProducts() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.post(this.apiUrl, this.products, { headers})\r\n            .subscribe();\r\n    }\r\n\r\n/**\r\n * Get all products from server\r\n * @return {Observable} return all products\r\n */    \r\n    getProducts() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        const productsObservable = Observable.create( (observer: Observer<any>) => {\r\n        let onlineMode = navigator.onLine;\r\n        \r\n        if (onlineMode) {\r\n            this.http.get(`${this.apiUrl}/pizza`, {headers})\r\n            .subscribe(\r\n                (productList: Array<any>) => {\r\n                    observer.next(this.onProductGetSuccess(productList));\r\n                    localStorage.setItem(\"productList\", JSON.stringify({category: \"pizza\", products: productList}));\r\n                },\r\n                (err: Response) => {\r\n                    observer.error('error while getting products! ' + err);\r\n                }\r\n            ); \r\n        } else {\r\n            observer.error(\"Offline mode!\");\r\n        }\r\n        });\r\n        return productsObservable;\r\n    }\r\n\r\n    onProductGetSuccess(productList: Array<any>) { \r\n        let products;\r\n\r\n        if (productList.length > 0) {\r\n            products = productList;\r\n            this.products = productList;\r\n        }   \r\n\r\n        return products;   \r\n    }\r\n\r\n/**\r\n * Get products according to selected category\r\n * @param {String} product's category\r\n * @return {Observable} products which are matched search query\r\n */    \r\n    getProductsByCategory(category: string): Observable<any> {\r\n      \r\n        const productsObserver = Observable.create((observer: Observer<any>) => {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        let online = navigator.onLine;\r\n        \r\n        if (online) {     \r\n            this.http.get(`${this.apiUrl}/${category}`, {headers})\r\n                .subscribe(\r\n                    (products: Array<any>) => {\r\n                        if (products.length > 0) {\r\n                            observer.next(products);\r\n                            localStorage.setItem(\"productList\", JSON.stringify({category: category, products: products}));\r\n                        } else {\r\n                            observer.error('No Products!');\r\n                        }\r\n                    },\r\n                \r\n                    (err: Response) => {\r\n                        observer.error(err);\r\n                    }\r\n                );\r\n        } else {\r\n            let productList = JSON.parse(localStorage.getItem('productList'));\r\n            if (productList.category == category) {\r\n                observer.next(productList.products);\r\n            } else {\r\n                observer.error('Offline mode!');\r\n            }\r\n        }\r\n     \r\n        });\r\n        \r\n        return productsObserver;\r\n    }\r\n\r\n    setSelectedProduct(productInfo) {\r\n        this.selectedProduct = productInfo;\r\n    }\r\n\r\n    getSelectedProduct() {\r\n        return this.selectedProduct;\r\n    }\r\n\r\n    searchProducts(query) {\r\n        const searchObservable = Observable.create( (observer: Observer<any>) => {\r\n        let onlineMode = navigator.onLine;\r\n        \r\n        if (onlineMode) {\r\n            this.searchProductsOnline(query, observer);\r\n        } else {\r\n            this.searchProductOffline(query, observer);\r\n        }\r\n        });\r\n               \r\n        return searchObservable;\r\n    }\r\n\r\n    searchProductOffline(query, observer) {\r\n        let productsDetail = JSON.parse(localStorage.getItem('productList'));\r\n        let localeProductList = productsDetail.products;\r\n        let searchRes = [];\r\n        \r\n        localeProductList.filter( (item) => {\r\n            if (item.productTitle == query) {\r\n                searchRes.push(item);\r\n            }\r\n        });\r\n\r\n        if (searchRes.length > 0) {\r\n            observer.next(searchRes);\r\n        } else if (searchRes.length == 0) {\r\n            observer.next([]);\r\n        }\r\n    }\r\n\r\n    searchProductsOnline(query, observer) {\r\n        const requestedWords = query.split(' ');\r\n        let queryTemplate = requestedWords.length > 1 ? requestedWords.join('%20') : query;\r\n        const result = combineLatest(\r\n            this.searchProductsByCategory('salads', queryTemplate),\r\n            this.searchProductsByCategory('drinks', queryTemplate),\r\n            this.searchProductsByCategory('pizza', queryTemplate)\r\n        );\r\n           \r\n        result.subscribe(\r\n            (searchResults) => {\r\n                let results = searchResults ? this.getFormattedResults(searchResults) : []; \r\n                observer.next(results);\r\n            }, \r\n\r\n            (searchError) => {\r\n                console.log(searchError);\r\n                observer.error('All');\r\n            }\r\n        );\r\n    }\r\n\r\n    getFormattedResults(searchResults) {\r\n        const results = [];\r\n        searchResults.forEach(searchResByProdCategory => {\r\n          searchResByProdCategory.forEach(item => {\r\n            results.push(item);\r\n          });\r\n        });\r\n    \r\n        return results;\r\n    }\r\n\r\n    searchProductsByCategory(category, query): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/${category}?productTitle=${query}`);\r\n    }\r\n\r\n    getResults() {\r\n        return this.results;\r\n    }\r\n    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://f-deploy.herokuapp.com' \r\n};\r\n// 'https://f-deploy.herokuapp.com'\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}