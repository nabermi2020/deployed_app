{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/authentication/authentication.component.html","webpack:///./src/app/auth/authentication/authentication.component.ts","webpack:///./src/app/auth/sign-in/sign-in.component.html","webpack:///./src/app/auth/sign-in/sign-in.component.ts","webpack:///./src/app/auth/sign-up/sign-up.component.html","webpack:///./src/app/auth/sign-up/sign-up.component.ts","webpack:///./src/app/auth/user.model.ts","webpack:///./src/app/cart/cart/cart.model.ts","webpack:///./src/app/shared/servives/edit-modal.service.ts","webpack:///./src/app/shared/servives/orders.service.ts","webpack:///./src/app/shared/servives/product-cart.service.ts","webpack:///./src/app/shared/servives/products.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAA0E;AAE1E,IAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,8CAA8C,EAAE;CACnF,CAAC;AAEF;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCXjC,uIAAiB,KAAG,mJACR,KAAK,8lBACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAAA;AAAA;IAAA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACID;AAAA;AAAA;IAAA;IAqByB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClC1B;AAAA;AAAA;AAAA;AAA6C;AACgF;AAI7H;IAII,mBAAoB,MAAc,EACd,KAAoB,EACpB,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QACpB,gBAAW,GAAX,WAAW,CAAa;QACxC,sDAAsD;IAC1D,CAAC;IAED;;;;;OAKG;IACH,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACrE,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;YACrD,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AACtB;AACA;AAEP;AAGvD,IAAM,UAAU,GAAW;IACvB,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,gGAAuB,EAAE,QAAQ,EAAE;YACpE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,wBAAwB,EAAE,SAAS,EAAE,MAAM,EAAE;SACxE,EAAC;IACF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,wBAAwB,EAAE,SAAS,EAAE,MAAM,EAAE;CACxE;AAED;IAAA;IASiC,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBlC;AAAA;AAAA;IAAA;IAoBA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEtB;AACE;AACP;;;;AAEpC;IAgBE,qBAAoB,MAAc,EACd,IAAgB;QADhB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAbpC,WAAM,GAAQ,uBAAuB,CAAC;QAEtC,qBAAgB,GAAG,IAAI,4CAAO,EAAO,CAAC;QACtC,aAAQ,GAAG,IAAI,4CAAO,EAAO,CAAC;QAG9B,UAAK,GAAG;YACN,IAAI,gDAAI,CAAC,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,EAAE,wBAAwB,CAAC;YACrH,IAAI,gDAAI,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,oBAAoB,EAAE,qBAAqB,CAAC;YACzH,IAAI,gDAAI,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE,oBAAoB,EAAE,6BAA6B,CAAC;SACtH,CAAC;IAIe,CAAC;IAEpB;;;;;OAKG;IACD,6BAAO,GAAP,UAAQ,KAAa,EAAE,QAAgB;QAAvC,iBAyBC;QAxBC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,UAAU,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,KAAK,mBAAc,QAAU,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC3F,SAAS,CACR,UAAC,GAAe;YACd,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAG;gBAC1B,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;gBACjD,UAAU,GAAI,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;aACtC;QACH,CAAC,EAED,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;QAEF,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACrC,CAAC;IAEH;;OAEG;IACD,oCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAEH;;OAEG;IACD,4BAAM,GAAN;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACjD,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAGF;;;MAGE;IACD,4BAAM,GAAN,UAAO,KAAK;QAAZ,iBAYC;QAXC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAEtE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,WAAQ,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC9D,SAAS,CACR,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7B,CAAC,EAAE,aAAG;YACJ,KAAK,CAAC,oCAAoC,CAAC;QAC7C,CAAC,CACF,CAAC;IACN,CAAC;IAGH;;;;OAIG;IACD,+BAAS,GAAT,UAAU,KAAW;QACnB,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,KAAO,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAClF,CAAC;IAEH;;;;OAIG;IACD,gCAAU,GAAV,UAAW,KAAa;QACtB,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,KAAO,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAClF,CAAC;IAEH;;;OAGG;IACD,kCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAEF;;;OAGG;IACF,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEF;;;;OAIG;IACF,mCAAa,GAAb,UAAc,QAAQ;QACpB,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACnC,IAAI,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,KAAK,mBAAc,QAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACzG,CAAC;IAEH;;;;OAIG;IACD,oCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,IAAI,GAAG,IAAI,gDAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,EACrC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EACnD,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE9E,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,eAAU,IAAI,CAAC,WAAW,CAAC,EAAI,EAAG,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAClG,CAAC;;sBA7JH;CA+JC;AArJuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GCVxB,0IAAmB,KAAG,yIACnB,KAAK,6uBACY,MAAS;;;oZAAuB,mFAAO,MAAoB,8uBAAiC,MAAS;;;qZAAuB,mFAAO,MAA2B,2jBAAe,yBADrL,2BACO,EADX,YACY,EADR,SACO,GAAa,wBAAmB,EAAtB,YAAuB,EAApB,SAAmB,GAAgC,2BAA4B,EAAhC,aAAiC,EAA7B,SAA4B,GAAa,wBAAmB,EAAtB,aAAuB,EAApB,SAAmB,GAAmC,aAAe,2BAApK,oMAAuB,GAAqE,uMAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFhJ;AAAA;AAAA;AAAA;AAAA;AAAgD;AACa;AACpB;AAEzC;IAOE,iCAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,0CAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CACzC,aAAG;YACD,IAAI,GAAG,EAAE;gBACR,oBAAoB;gBACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;aACrD;iBACI;gBACJ,6BAA6B;gBAC5B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;QACH,CAAC,CACF;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,iDAAe,GAAf;QACE,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChD,IAAG,QAAQ,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,QAAQ,CAAC,CAAC;SAC3E;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;SAClD;IACH,CAAC;IACH,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCxC2Y,kJAAkE,gGAAmB;qGAAoX,iJAAuE,mGAAsB;qGAAS,iJAA+C,kHAAqC;qGAF/gC,wJAAiC,KAAG;;;;;wBAEgB;MAA3B;;wBAA0B;MAFf,kyBAEgB,IAAM,+IAAwB,KAAO,yIAAmB,qFAAsB;;;;;;;;;;;;yyDAA0O,IAAgC,yYAAkE,IAA6B,gJAAwB,KAAO,6IAAsB,wFAAyB;;;;;;;;;;;;4yDAA6P,IAA+B,yYAAuE,IAA+B,yYAA+C,IAA+C,2LAA+F,qFAAkB,mDAA72B,mBAAQ,EAAnK,aAA0O,EAA/E,UAAQ,GAAlC,wBAAY,EAAuD,mBAAO,EAA3M,aAA0O,EAAzG,UAAY,EAAuD,UAAO,GAAkE,gJAAqC,YAAxC,aAAkE,EAA/D,UAAqC,GAAgR,mBAAQ,EAAnJ,aAA6P,EAAlH,UAAQ,GAAqE,2BAAe,EAAc,mBAAO,EAA5P,aAA6P,EAArC,UAAe,EAAc,UAAO,GAAmC,gJAA2C,YAA9C,aAAuE,EAApE,UAA2C,GAA2D,qBAAmB,aAAtB,aAA+C,EAA5C,UAAmB,2BAF76B,8sBAEgB,GAA8E,60BAA0O,GAA6M,o1BAA6P,GAAyS,0EAAwB,SAA9F,aAA+F,EAAzB,UAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFvnC;AAAA;AAAA;AAAA;AAAgD;AACE;AAIlD;IAQE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,eAAU,GAAY,IAAI,CAAC;IAEqB,CAAC;IAEjD,kCAAQ,GAAR,cAAY,CAAC;IAEf;;;OAGG;IACD,iCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACnC,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,QAAQ;SACrB;QAED,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC7D,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAEH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCjCmf,iJAAyE,qGAAwB;qGAAa,iJAAyE,iHAAoC;qGAA8Z,iJAAuE,oGAAuB;qGAAa,iJAAuE,iHAAoC;qGAAyY,iJAAkE,+FAAkB;qGAAa,iJAA8E,qGAAwB;qGAAa,iJAAqF,mHAAsC;qGAA8W,iJAAkE,+FAAkB;qGAAW,iJAA8E,sGAAyB;sGAA+hB,iJAAwE,kGAAqB;sGAAe,iJAAoF,qGAAwB;sGAAe,iJAA6F,mGAAsB;sGAA0f,iJAAoF,kGAAqB;sGAAe,iJAAgG,qGAAwB;sGAAe,iJAA6F,mGAAsB;sGAA0Y,iJAAkE,+FAAkB;sGAAW,iJAA8E,qGAAwB;sGAAW,iJAAqF,mHAAsC;sGAAW,iJAA0E,6GAAgC;sGAAwX,iJAAsE,iGAAoB;sGAAW,iJAAkF,qGAAwB;qGAFrsL,yJAAiC,KAAG;;;;;wBAE+B;MAAxB;;wBAAuB;MAF9B,i0BAE+B,IAAM,yIAAiB,KAAO,sJAA+B,KAAS,8IAAwB,KAAW,8IAAwB,0FAAoC;;;;;;;;;;;;85CAAwN,IAAoD,yYAAyE,IAAqC,yYAAyE,IAA6D,uJAA+B,KAAS,+IAAwB,KAAW,8IAAuB,yFAAmC;;;;;;;;;;;;85CAAoN,IAA4C,yYAAuE,IAAoC,yYAAuE,IAA6D,uJAA+B,KAAS,+IAAwB,KAAW,0IAAmB,qFAA+B;;;;;;;;;;;;85CAAuM,IAA4C,yYAAkE,IAA+B,yYAA8E,IAAqC,yYAAqF,IAA6D,uJAA+B,KAAO,+IAAwB,KAAS,0IAAmB,qFAA0B;;;;;;;;;;;;85CAA6L,IAAsC,yYAAkE,IAA6B,yYAA8E,IAA8C,8gCAA4D,IAAO,yIAAiB,KAAS,uJAA+B,KAAW,+IAAwB,KAAW,6IAAsB,wFAAkC;;;;;;;;;;;;85CAA8O,IAA0D,0YAAwE,IAAoC,0YAAoF,IAAuC,0YAA6F,IAAmD,uJAA+B,KAAW,+IAAwB,KAAa,mJAA4B,+FAA6C;;;;;;;;;;;;85CAAmR,IAAkD,0YAAoF,IAAoC,0YAAgG,IAAuC,2YAA6F,IAAyE,wJAA+B,KAAO,gJAAwB,KAAS,2IAAmB,qFAA0B;;;;;;;;;;;;i6CAA6L,IAAsC,2YAAkE,IAA6B,2YAA8E,IAAmC,2YAAqF,IAAiD,2YAA0E,IAAqD,wJAA+B,KAAO,gJAAwB,KAAS,6IAAqB,uFAA4B;;;;;;;;;;;;i6CAAqM,IAAsC,2YAAsE,IAA+B,2YAAkF,IAAyD,4LAA2G,sFAAmB,mDAAh2L,mBAA8B,mBAFE,YAE+B,EAA/D,SAA8B,GAAkY,4BAA2B,EAAvN,aAAwN,EAA5B,UAA2B,GAAwD,6CAA6C,qBAAhD,aAAyE,EAAtE,UAA6C,GAAiE,6CAA6C,qBAAhD,aAAyE,EAAtE,UAA6C,GAAoZ,2BAA0B,EAAnN,aAAoN,EAA3B,UAA0B,GAAgD,4CAA2C,oBAA9C,aAAuE,EAApE,UAA2C,GAAgE,4CAA2C,oBAA9C,aAAuE,EAApE,UAA2C,GAAkY,wBAAuB,EAAtM,aAAuM,EAAxB,UAAuB,GAAgD,yCAAsC,iBAAzC,aAAkE,EAA/D,UAAsC,GAA2D,wHAAkD,iBAArD,aAA8E,EAA3E,UAAkD,GAAiE,+HAAyD,iBAA5D,aAAqF,EAAlF,UAAyD,GAA+W,wBAAuB,EAA5L,aAA6L,EAAxB,UAAuB,GAA0C,yCAAsC,iBAAzC,aAAkE,EAA/D,UAAsC,GAAyD,wHAAkD,iBAArD,aAA8E,EAA3E,UAAkD,GAA4E,4BAAyB,EAA9B,aAA4D,EAAvD,UAAyB,GAAuZ,2BAA0B,EAA7O,aAA8O,EAA3B,UAA0B,GAA8D,4CAA4C,oBAA/C,aAAwE,EAArE,UAA4C,GAAgE,iIAAwD,oBAA3D,aAAoF,EAAjF,UAAwD,GAAmE,4IAAiE,oBAApE,aAA6F,EAA1F,UAAiE,GAAsd,iCAAgC,EAAlR,aAAmR,EAAjC,UAAgC,GAAsD,kDAAwD,0BAA3D,aAAoF,EAAjF,UAAwD,GAAgE,mJAAoE,0BAAvE,aAAgG,EAA7F,UAAoE,GAAmE,4IAAiE,oBAApE,cAA6F,EAA1F,UAAiE,GAA2X,wBAAuB,EAA5L,cAA6L,EAAxB,UAAuB,GAA0C,yCAAsC,iBAAzC,cAAkE,EAA/D,UAAsC,GAAyD,wHAAkD,iBAArD,cAA8E,EAA3E,UAAkD,GAA+D,+HAAyD,iBAA5D,cAAqF,EAAlF,UAAyD,GAA6E,oHAA8C,iBAAjD,cAA0E,EAAvE,UAA8C,GAAiX,0BAAyB,EAApM,cAAqM,EAA1B,UAAyB,GAA0C,2CAA0C,mBAA7C,cAAsE,EAAnE,UAA0C,GAA2D,+HAAsD,mBAAzD,cAAkF,EAA/E,WAAsD,mDAFhnL,8sBAE+B,GAAqK,guBAAwN,GAA6a,ouBAAoN,GAAwZ,ouBAAuM,GAAsgB,ouBAA6L,GAAiQ,ouBAA4D,GAAsK,ouBAA8O,GAAykB,ouBAAmR,GAA2kB,4uBAA6L,GAAmnB,4uBAAqM,GAA4V,sBAAoC,yBAA1G,cAA2G,EAArC,WAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFh1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACS;AACE;AACkB;AAGpE;IAUE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,kCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEH;;OAEG;IACO,kCAAQ,GAAhB;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAChF,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5G,SAAS,EAAE,IAAI,wDAAS,CAAC;gBACvB,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,CAAC;gBACjF,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACpF,EAAE;gBACD,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;aAC9C,CACJ;YACC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9H,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IACL,CAAC;IAGD,sBAAI,sCAAS;QADb,kBAAkB;aAClB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChD,CAAC;;;OAAA;IAGD,sBAAI,qCAAQ;QADb,kBAAkB;aACjB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAGD,sBAAI,kCAAK;QADX,kBAAkB;aAChB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAGD,sBAAI,kCAAK;QADX,kBAAkB;aAChB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAGD,sBAAI,qCAAQ;QADd,oBAAoB;aAClB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACzD,CAAC;;;OAAA;IAGD,sBAAI,2CAAc;QADpB,oBAAoB;aAClB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAGD,sBAAI,kCAAK;QADX,oBAAoB;aAClB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAGD,sBAAI,oCAAO;QADb,oBAAoB;aAClB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAMD,sBAAI,sCAAS;QAJf;;;WAGG;aACD;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChD,CAAC;;;OAAA;IAEH;;;;OAIG;IACD,wCAAc,GAAd,UAAe,OAAoB;QAAnC,iBA0BC;QAzBC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAI,WAAW,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YACzC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrB,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CACzC,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;wBACV,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;4BACzB,OAAO,CAAC,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;yBACrC;qBACF;yBAAM;wBACH,OAAO,CAAC,IAAI,CAAC,CAAC;qBACjB;gBACH,CAAC,EAED,aAAG;oBACD,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACjC,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IAEH;;;;OAIG;IACD,wCAAc,GAAd,UAAe,OAAoB;QAAnC,iBAuBC;QAtBC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAI,OAAO,GAAI,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YAC1C,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrB,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;wBACV,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;4BACzB,OAAO,CAAC,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;yBACrC;qBACF;yBAAM;wBACL,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf;gBACH,CAAC,EACD,aAAG;oBACD,KAAK,CAAC,GAAG,CAAC,CAAC;gBACb,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC;QAEF,OAAO,OAAO,CAAC;IACjB,CAAC;IAEF;;;;MAIE;IACD,2CAAiB,GAAjB,UAAkB,qBAAgC;QAChD,IAAI,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC7D,IAAI,cAAc,GAAG,qBAAqB,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;QACzE,yBAAyB;QACzB,+BAA+B;QAC/B,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,IAAI,cAAc,KAAK,QAAQ,EAAE;YAC7B,OAAO;gBACH,iBAAiB,EAAE,IAAI;aAC1B,CAAC;SACL;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACD,kCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAC3C,IAAI,OAAO,GAAG,IAAI,gDAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,EACrC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAC3C,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAC9B,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAClC;IACH,CAAC;IAEC,eAAe;IACf,2CAAiB,GAAjB,UAAkB,OAAoB;QAAtC,iBAYC;QAXC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YACzC,IAAI,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,oBAAoB,EAAE;gBAClD,OAAO,CAAC,EAAC,qBAAqB,EAAE,IAAI,EAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,eAAe;IACf,mDAAyB,GAAzB,UAA0B,OAAoB;QAC5C,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACvC,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAC5B,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrND;AAAA;AAAA;IAUI,cAAY,KAAa,EAAG,KAAa,EAAE,KAAa,EAC5C,QAAgB,EAAE,KAAa,EAC/B,KAAa,EAAE,OAAe;QACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,uBAAQ,GAAR,UAAS,UAAkB,EAAE,UAAkB;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;IAC9E,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;IAOI,cAAY,QAAyB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,wBAAS,GAAT,UAAU,QAAQ;QACd,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IAClC,CAAC;IAED,wBAAS,GAAT,UAAU,EAAE;QACR,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,sBAAO,GAAP;QACG,8BAA8B;QAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,0BAAW,GAAX,UAAY,QAAQ;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,yBAAU,GAAV,UAAW,OAAgB;QACvB,IAAI,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE;YACrC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,cAAI;gBACvB,IAAI,IAAI,CAAC,EAAE,IAAI,SAAS,EAAG;oBACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBAChC;YACL,CAAC,CAAC;SACL;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,gCAAiB,GAAjB,UAAkB,EAAE;QAChB,IAAI,YAAY,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,UAAC,IAAI,EAAE,KAAK;YAC/B,IAAK,IAAI,CAAC,EAAE,IAAI,EAAE,EAAG;gBACjB,YAAY,GAAG,KAAK,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,iCAAkB,GAAlB,UAAmB,EAAE;QACjB,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,cAAI;YACvB,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;gBACf,YAAY,GAAG,IAAI;aACtB;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,kCAAmB,GAAnB;QACI,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,cAAI;YACvB,KAAK,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,4BAAa,GAAb;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,wCAAyB,GAAzB;QACI,IAAI,eAAe,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,cAAI;YACvB,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,wBAAS,GAAT;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,uBAAQ,GAAR,UAAS,UAAkB,EAAE,UAAkB;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;IAC9E,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvGD;AAAA;AAAA;AAA+B;AAG/B;IAKI;QAHA,aAAQ,GAAY,KAAK,CAAC;QAC1B,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAGzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,yCAAc,GAAd;QACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACU;AACP;AAGf;;;;;;AAGzC;IAME,uBAAoB,WAAwB,EACxB,IAAgB,EAChB,WAAwB,EACxB,MAAc;QAHd,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QALlC,WAAM,GAAQ,uBAAuB,CAAC;IAMtC,CAAC;IAED,mCAAW,GAAX,UAAY,KAAY;QAAxB,iBAmBC;QAlBC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC;QAC9C,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,YAAS,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aAC9D,SAAS,CACN,aAAG;YACC,mBAAmB;YACnB,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACzC,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACvD,CAAC,EACD,aAAG;YACC,mBAAmB;YACnB,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACnC,CAAC,CACJ,CAAC;IACR,CAAC;IAED,iCAAS,GAAT;QACE,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,uBAAkB,EAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACnF,CAAC;;wBA7CH;CA+CC;AApCyB;;;;;;;;;;;;;ACX1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACI;AAEO;AAEN;AAIzD;IAOI,qBAAoB,WAAwB,EACxB,IAAgB;QADhB,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAY;QANpC,SAAI,GAAG,IAAI,0DAAI,EAAE,CAAC;QAClB,mBAAc,GAAG,IAAI,4CAAO,EAAO,CAAC;QACpC,oBAAe,GAAG,IAAI,iDAAY,EAAE,CAAC;QACrC,WAAM,GAAQ,uBAAuB,CAAC;QAI1B,mDAAmD;QACnD,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACrC,CAAC;IAED,uCAAuC;IACvC,gDAA0B,GAA1B;QAAA,iBAgBC;QAfG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC;QAClD,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,iBAAY,MAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aACjE,SAAS,CACN,UAAC,GAAe;YACZ,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,0BAA0B;gBACvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;iBAAM;gBACJ,iCAAiC;gBAChC,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;QACL,CAAC,CACJ,CAAC;IACV,CAAC;IAED,qDAAqD;IACrD,wCAAkB,GAAlB;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,UAAO,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aAChE,SAAS,CACN,aAAG;YACC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC/B,CAAC,CACJ,CAAC;IACV,CAAC;IAED,iCAAW,GAAX,UAAY,OAAgB;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,yCAAmB,GAAnB;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,cAAS,IAAI,CAAC,IAAI,CAAC,EAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aAC/E,SAAS,CACN,aAAG;YACA,+BAA+B;QAClC,CAAC,EACD,aAAG;YACC,uBAAuB;QAC3B,CAAC,CACJ,CAAC;IACV,CAAC;IAED,uCAAiB,GAAjB;QAAA,iBAiBC;QAhBG,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC;QAClD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,cAAS,MAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aACrF,SAAS,CACN,aAAG;YACC,qCAAqC;YACrC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YACvC,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9C,yBAAyB;YACzB,oCAAoC;QACxC,CAAC,EACD,aAAG;YACC,KAAK,CAAC,uCAAuC,CAAC,CAAC;QACnD,CAAC,CACJ;IACT,CAAC;IAED,6DAAuC,GAAvC;QAAA,iBAaC;QAZG,IAAI,CAAC,WAAW,CAAC,gBAAgB;aAChC,SAAS,CACN,aAAG;YACC,IAAI,CAAC,GAAG,EAAE;gBACP,KAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;aACrC;QACL,CAAC,EAED,aAAG;YACC,KAAK,CAAC,GAAG,CAAC,CAAC;QACf,CAAC,CACJ;IACL,CAAC;IAED,+CAAyB,GAAzB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACjD,CAAC;IAED,iCAAW,GAAX;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,mCAAa,GAAb;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IACrC,CAAC;IAED,mBAAmB;IACnB,oCAAc,GAAd;QACI,MAAM;IACV,CAAC;IAED,mBAAmB;IACnB,kCAAY,GAAZ;QACI,MAAM;IACV,CAAC;IAED,oCAAc,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,+BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClJD;AAAA;AAAA;AAAmF;AAGnF;IAcI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAZpC,WAAM,GAAW,uBAAuB,CAAC;QAEzC,aAAQ,GAAG;QACP,WAAW;QACX,0IAA0I;QAC1I,uKAAuK;QACvK,0IAA0I;QAC1I,uKAAuK;QACvK,6IAA6I;QAC7I,QAAQ;SACX;IAEuC,CAAC;IAEzC,qCAAY,GAAZ;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;aAC1D,SAAS,CACN,aAAG;YACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,EACD,aAAG;YACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACJ;IACT,CAAC;IAED,oCAAW,GAAX;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,WAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAED,8CAAqB,GAArB,UAAsB,QAAgB;QAClC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,SAAI,QAAU,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC3E,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3CD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module.ngfactory\": [\n\t\t\"./src/app/dashboard/dashboard.module.ngfactory.js\",\n\t\t\"dashboard-dashboard-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nconst routes: Routes = [\n { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule' } \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div id=\"appDev\">\n  <div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'food-delivery';\n}\n","import { OrdersService } from './shared/servives/orders.service';\r\nimport { EditModalService } from './shared/servives/edit-modal.service';\r\nimport { ProductService } from './shared/servives/products.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProductCart } from './shared/servives/product-cart.service';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AuthModule,\r\n    HttpClientModule\r\n    \r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthService,\r\n    ProductService,\r\n    ProductCart,\r\n    EditModalService,\r\n    OrdersService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AuthService } from './auth.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    isAuthorized: boolean;\r\n\r\n    constructor(private router: Router,\r\n                private route:ActivatedRoute,\r\n                private authService: AuthService) {\r\n        //this.isAuthorized = this.authService.isAuthorized();\r\n    }\r\n\r\n    /**\r\n     * Check user authentication status\r\n     * @param {ActivatedRouteSnapshot} route snapshot \r\n     * @param {RouterStateSnapshot} router state\r\n     * @return {boolean} return authentication status\r\n     */\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.authService.isAuthorized() && localStorage.getItem(\"userInfo\")) {\r\n            return true; \r\n        } else {\r\n            this.router.navigate([''], {relativeTo: this.route});\r\n            return false;\r\n        } \r\n    }    \r\n}","import { AuthenticationComponent } from './authentication/authentication.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst authRoutes: Routes = [\r\n    { path: 'authentication', component: AuthenticationComponent, children: [\r\n        { path: 'signin', component: SignInComponent },\r\n        { path: 'signup', component: SignUpComponent },\r\n        { path: '', redirectTo: '/authentication/signin', pathMatch: \"full\" },\r\n    ]},\r\n    { path: '', redirectTo: '/authentication/signin', pathMatch: \"full\" },   \r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(authRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class AuthRoutingModule { }","import { AuthRoutingModule } from './auth-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthenticationComponent } from './authentication/authentication.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SignInComponent,\r\n        SignUpComponent,\r\n        AuthenticationComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        AuthRoutingModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    exports: [\r\n           \r\n    ]\r\n})\r\n\r\n\r\nexport class AuthModule {\r\n\r\n}","import { ProductCart } from './../shared/servives/product-cart.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  apiUrl: any = \"http://localhost:3000\";\r\n  isAuthenticated: boolean;\r\n  isUserAuthorized = new Subject<any>();\r\n  userData = new Subject<any>();\r\n  currentUser: any;\r\n  \r\n  users = [\r\n    new User(\"John\", \"Smith\", \"john_smith777\", \"john777\", \"+380501654784\", \"john777@gmail.com\", \"NY, Green Valley 15/64\"),\r\n    new User(\"Michael\", \"Naberezhnyi\", \"michael777\", \"test123\", \"+380501865210\", \"mnabe777@gmail.com\", \"LA, Red Valley 7/32\"),\r\n    new User(\"John\", \"Doe\", \"johnl777\", \"demo1234\", \"+380502565210\", \"john_doe@gmail.com\", \"Las Vegas, Yellow Road 7/32\")\r\n  ];\r\n\r\n  constructor(private router: Router,\r\n              private http: HttpClient \r\n               ) { }\r\n\r\n/**\r\n * User authentication\r\n * @param {String} user's login\r\n * @param {String} user's password\r\n * @return {Boolean} returns authentication status\r\n */               \r\n  signInn(login: string, password: string) {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    let authStatus;\r\n\r\n    this.http.get(`${this.apiUrl}/users?login=${login}&&password=${password}`, {headers: headers})\r\n      .subscribe(\r\n        (res: Array<any>) => {\r\n          if (res && res.length > 0 ) {\r\n            this.currentUser = res[0];\r\n            this.isAuthenticated = true;\r\n            this.isUserAuthorized.next(this.isAuthenticated);\r\n            authStatus =  true;\r\n            this.userData.next(res[0]);\r\n            return true;\r\n          } else {\r\n            console.log('Authentication error!');\r\n          }\r\n        },\r\n\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n      \r\n      return authStatus ? true : false; \r\n  }\r\n\r\n/**\r\n * Update user data\r\n */\r\n  updateUserData() {\r\n    this.signInn(this.currentUser.login, this.currentUser.password);\r\n  }\r\n\r\n/**\r\n * Logout user from the active session\r\n */  \r\n  logOut() {\r\n    this.isAuthenticated = false;\r\n    this.isUserAuthorized.next(this.isAuthenticated);\r\n    localStorage.removeItem(\"userInfo\");\r\n  }\r\n\r\n\r\n /**\r\n * Register new user and navigate to the 'sign-in'\r\n * @param {User} new user instance\r\n */ \r\n  signUp(users) {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n     \r\n    this.http.post(`${this.apiUrl}/users`, users, {headers: headers})\r\n      .subscribe(\r\n        res => {\r\n          this.router.navigate(['']);\r\n\r\n        }, err => {\r\n          alert('Something went wrong, try again!!!')\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n/**\r\n * Check user's login existence in DB\r\n * @param {User} user's login \r\n * @return {Observable} result with array of 1 user if there's user with the same login\r\n */\r\n  checkUser(login: User): Observable<any> {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    return this.http.get(`${this.apiUrl}/users?login=${login}`, {headers: headers});\r\n  }\r\n\r\n/**\r\n * Check existense of user email in DB\r\n * @param {string} user's email \r\n * @return {Observable} array with 1 email if there's user withthe same email\r\n */\r\n  checkEmail(email: string): Observable<any>{\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    return this.http.get(`${this.apiUrl}/users?email=${email}`, {headers: headers});\r\n  }\r\n\r\n/**\r\n * Return user's authentication status\r\n * @return {boolean} auth status;\r\n */\r\n  isAuthorized(): boolean {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n /**\r\n  *  Return current user's info\r\n  * @return {obj} user's data \r\n  */ \r\n  getCurrentUser(): any {\r\n    return this.currentUser;\r\n  }\r\n\r\n /**\r\n  * Check user credentials\r\n  * @param {obj} object with credentials\r\n  * @return {Observable} array of 1 user if search was successfull \r\n  */ \r\n  checkUserInfo(userData): Observable<any> {\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n    let login = this.currentUser.login;\r\n    let password = userData.passwords.password;\r\n    return this.http.get(`${this.apiUrl}/users?login=${login}&&password=${password}`, { headers: headers});\r\n  }\r\n\r\n/**\r\n * Update user info for user with appropriate id\r\n * @param {Obj} user's data\r\n * @return {Observable} updating result\r\n */\r\n  updateUserInfo(userData): Observable<any> {\r\n    let user = new User(userData.firstName, userData.lastName, \r\n                        this.currentUser.login, userData.passwords.password,\r\n                        userData.phone, this.currentUser.email, userData.address);\r\n    \r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n     \r\n    return this.http.put(`${this.apiUrl}/users/${this.currentUser.id}`,  user, { headers: headers});\r\n  }\r\n\r\n}\r\n","<div id=\"signInUp\">\n  <ul id=\"formsNav\">\n    <li routerLinkActive=\"activeTab\">\n        <a routerLink=\"signin\">Sign In</a>\n    </li>\n\n    <li routerLinkActive=\"activeTab\">\n        <a routerLink=\"signup\">Sign Up</a>  \n    </li>\n  </ul>\n  <router-outlet></router-outlet>\n</div>","import { AuthService } from './../auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})\nexport class AuthenticationComponent implements OnInit{\n  \n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.isUserAuthorized.subscribe (\n      sub => {\n        if (sub) {\n         // console.log(sub);\n          this.router.navigate(['/dashboard/products/pizza']);\n        } \n        else {\n         // console.log(\"auth error\");\n          this.router.navigate(['']);\n        }\n      }\n    ) \n\n    this.isAuthenticated();\n  }\n\n  isAuthenticated() {\n    let userData = localStorage.getItem(\"userInfo\");\n    if(userData) {\n      console.log(userData);\n\n      let userCredentials = JSON.parse(userData);\n      this.authService.signInn(userCredentials.login, userCredentials.password);\n    } else {\n      console.log('No active session data available!');\n    }\n  }\n}\n","<div class=\"col-xs-12 col-md-12\">\n  <form id=\"signIn\"\n        #form=ngForm\n        (ngSubmit)=\"onLogin(form)\">\n\n    <div class=\"form-group\">\n      <label for=\"login\">\n        Login:\n      <input type=\"text\"\n             placeholder=\"Enter login\"\n             class=\"form-control\"\n             id=\"login\"\n             name=\"login\"\n             required\n             login\n             ngModel\n             #login=\"ngModel\">\n      </label>\n    </div>\n\n    <p *ngIf=\"!login.valid && login.touched\" class=\"validationErrors\">Login is not valid!</p>\n\n    <div class=\"form-group\">\n      <label for=\"password\">\n        Password:\n      <input type=\"password\"\n             placeholder=\"Enter password\"\n             class=\"form-control\"\n             id=\"password\"\n             required\n             password\n             #password=\"ngModel\"\n             name=\"password\"\n             ngModel>\n      </label>\n    </div>\n    <p *ngIf=\"!password.valid && password.touched\" class=\"validationError\">Password is not valid!</p>\n    <p *ngIf=\"!authStatus\" class=\"validationError\">Your login and password are incorect!</p>\n\n    <button class=\"btn btn-primary\"\n            type=\"submit\"\n            [disabled]=\"!form.valid\">\n      Log In\n    </button>\n  </form>\n</div>\n\n \n","import { AuthService } from './../auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n \r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  authStatus: boolean = true;\r\n   \r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n/**\r\n * Provide user login using appropriate credentials\r\n * @param {NgForm} login and password.\r\n */\r\n  onLogin(form: NgForm) {\r\n    let login = form.value.login;\r\n    let password = form.value.password;\r\n    let credentials = {\r\n      \"login\": login,\r\n      \"password\": password\r\n    }\r\n   \r\n    this.authStatus =  this.authService.signInn(login, password); \r\n    if (this.authService) {\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(credentials));\r\n    }   \r\n  }\r\n\r\n}\r\n","<div class=\"col-xs-12 col-md-12\">\n  <form id=\"signUp\"\n        [formGroup]=\"registrationForm\"\n        (ngSubmit)=\"onSignUp()\">\n\n    <div class=\"row\">\n      <div class=\"col-md-6 col-xs-6\">\n        <div class=\"form-group\">\n          <label for=\"First Name\">\n            First Name:\n\n          <input type=\"text\"\n                 placeholder=\"Enter First Name\"\n                 class=\"form-control\"\n                 id=\"firstName\"\n                 name=\"firstName\"\n                 formControlName=\"firstName\">\n          </label>\n        </div>\n        \n        <p *ngIf=\"!firstName.valid && firstName.touched\" class=\"validationError\">First name is not valid!</p>\n        <p *ngIf=\"firstName.errors && firstName.touched\" class=\"validationError\">Minimal length should be at least 4!</p>\n      </div>\n\n      <div class=\"col-md-6 col-xs-6\">\n        <div class=\"form-group\">\n          <label for=\"Last Name\">\n            Last Name:\n\n          <input type=\"text\"\n                 placeholder=\"Enter Last Name\"\n                 class=\"form-control\"\n                 id=\"lastName\"\n                 name=\"lastName\"\n                 formControlName=\"lastName\">\n          </label>\n        </div>\n\n        <p *ngIf=\"!lastName.valid && lastName.touched\" class=\"validationError\">Last name is not valid!</p>\n        <p *ngIf=\"lastName.errors && lastName.touched\" class=\"validationError\">Minimal length should be at least 4!</p>\n      </div>\n\n      <div class=\"col-md-6 col-xs-6\">\n        <div class=\"form-group\">\n          <label for=\"login\">\n            Login:\n\n          <input type=\"text\"\n                 placeholder=\"Enter login\"\n                 class=\"form-control\"\n                 id=\"login\"\n                 name=\"login\"\n                 formControlName=\"login\">\n          </label>\n        </div>\n\n        <p *ngIf=\"login.errors && login.touched \" class=\"validationError\">Login isn't valid!</p>\n        <p *ngIf=\"login?.errors?.minlength && login.touched \" class=\"validationError\">Min length should be 4 !</p>\n        <p *ngIf=\"login?.errors?.loginIsForbidden && login.touched \" class=\"validationError\">User with such login is already exist!</p>\n      </div>\n\n    <div class=\"col-md-6 col-xs-6\">\n      <div class=\"form-group\">\n        <label for=\"phone\">\n          Phone:\n        <input type=\"text\"\n               id=\"phone\"\n               name=\"phone\"\n               class=\"form-control\"\n               placeholder=\"Enter phone\"\n               formControlName=\"phone\">\n        </label>\n      </div>\n\n      <p *ngIf=\"phone.errors && phone.touched \" class=\"validationError\">Phone isn't valid!</p>\n      <p *ngIf=\"phone?.errors?.minlength && phone.touched \" class=\"validationError\">Min length should be 10 !</p>\n    </div>\n\n    <div formGroupName = passwords class=\"col-md-12 col-xs-12\" >\n      <div class=\"row\">\n        <div class=\"col-md-6 col-xs-6\">\n          <div class=\"form-group\">\n          <label for=\"password\">\n            Password:\n\n          <input type=\"text\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                class=\"form-control\"\n                placeholder=\"Enter password\"\n                formControlName=\"password\">\n          </label>\n          </div>\n          \n          <p *ngIf=\"password.errors && password.touched \" class=\"validationError\">Password isn't valid!</p>\n          <p *ngIf=\"password?.errors?.minlength && password.touched \" class=\"validationError\">Min length should be 4 !</p>\n          <p *ngIf=\"passwords?.errors?.doesMatchPassword && password.touched \" class=\"validationError\">Passwords don't match!</p>\n        </div>\n\n        <div class=\"col-md-6 col-xs-6\">\n          <div class=\"form-group\">\n            <label for=\"passwordRepeat\">\n              Repeat password:\n\n            <input type=\"text\"\n                   id=\"passwordRepeat\"\n                   name=\"passwordRepeat\"\n                   type=\"password\"\n                   class=\"form-control\"\n                   placeholder=\"Repeat password\"\n                   formControlName=\"passwordRepeat\">\n            </label>\n          </div>\n\n          <p *ngIf=\"passwordRepeat.errors && passwordRepeat.touched \" class=\"validationError\">Password isn't valid!</p>\n          <p *ngIf=\"passwordRepeat?.errors?.minlength && passwordRepeat.touched \" class=\"validationError\">Min length should be 4 !</p>\n          <p *ngIf=\"passwords?.errors?.doesMatchPassword && password.touched \" class=\"validationError\">Passwords don't match!</p>\n        </div>\n      </div>\n    </div>\n\n\n\n    <div class=\"col-md-6 col-xs-6\">\n      <div class=\"form-group\">\n        <label for=\"email\">\n          Email:\n        <input type=\"text\"\n               placeholder=\"Enter email\"\n               class=\"form-control\"\n               id=\"email\"\n               name=\"email\"\n               formControlName=\"email\">\n        </label>\n      </div>\n\n      <p *ngIf=\"email.errors && email.touched \" class=\"validationError\">Email isn't valid!</p>\n      <p *ngIf=\"email?.errors?.minlength && email.touched \" class=\"validationError\">Min length should be 4 !</p>\n      <p *ngIf=\"email?.errors?.emailIsForbidden && email.touched \" class=\"validationError\">User with such email is already exist!</p>\n      <p *ngIf=\"email?.errors?.email && email.touched \" class=\"validationError\">Email doensn't much the pattern!</p>\n    </div>\n\n    <div class=\"col-md-6 col-xs-6\">\n      <div class=\"form-group\">\n        <label for=\"address\">\n          Address:\n        <input type=\"text\"\n               id=\"address\"\n               name=\"address\"\n               class=\"form-control\"\n               placeholder=\"Enter address\"\n               formControlName=\"address\">\n        </label>\n      </div>\n\n      <p *ngIf=\"address.errors && address.touched \" class=\"validationError\">Address isn't valid!</p>\n      <p *ngIf=\"address?.errors?.minlength && address.touched \" class=\"validationError\">Min length should be 4 !</p>\n    </div>\n\n    </div>\n\n    <button class=\"btn btn-success\"\n            type=\"submit\"\n            [disabled]=\"!registrationForm.valid\">\n      Sign Up\n    </button>\n  </form>\n</div>","import { User } from './../user.model';\r\nimport { AuthService } from './../auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  userPassword: string;\r\n  userRepeatedPassword: string;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n/**\r\n * Initialize 'sign up' form's controls and appropriate validators\r\n */\r\n  private initForm() {\r\n    this.registrationForm = new FormGroup({\r\n      \"firstName\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      \"lastName\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      \"login\": new FormControl('', [Validators.required, Validators.minLength(4)], this.forbiddenLogin.bind(this)),\r\n      passwords: new FormGroup({\r\n        \"password\": new FormControl('', [Validators.required, Validators.minLength(4), ]),\r\n        \"passwordRepeat\": new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n        }, {\r\n          validators: this.validatePasswords.bind(this) \r\n        }  \r\n    ),\r\n      \"phone\": new FormControl('', [Validators.required, Validators.minLength(10)]),\r\n      \"email\": new FormControl('', [Validators.required, Validators.email, Validators.minLength(4)], this.forbiddenEmail.bind(this)),\r\n      \"address\": new FormControl('', [Validators.required, Validators.minLength(5)])\r\n    });\r\n  }\r\n\r\n  //Need refactoring\r\n  get firstName() {\r\n    return this.registrationForm.get('firstName');\r\n  }\r\n\r\n //Need refactoring\r\n  get lastName() {\r\n    return this.registrationForm.get('lastName');\r\n  }\r\n\r\n//Need refactoring\r\n  get login() {\r\n    return this.registrationForm.get('login');\r\n  }\r\n\r\n//Need refactoring\r\n  get email() {\r\n    return this.registrationForm.get('email');\r\n  }\r\n\r\n//Need refactoring  \r\n  get password() {\r\n    return this.registrationForm.get('passwords.password');  \r\n  }\r\n\r\n//Need refactoring  \r\n  get passwordRepeat() {\r\n    return this.registrationForm.get('passwords.passwordRepeat');  \r\n  }\r\n\r\n//Need refactoring  \r\n  get phone() {\r\n    return this.registrationForm.get('phone');\r\n  }\r\n\r\n//Need refactoring  \r\n  get address() {\r\n    return this.registrationForm.get('address');\r\n  }\r\n\r\n/**\r\n * Return passwords from appropriate fields\r\n * @return {FormGroup} return FormGroup with represents passwords  \r\n */  \r\n  get passwords() {\r\n    return this.registrationForm.get('passwords');\r\n  }\r\n\r\n/**\r\n * Check existence user with the same login\r\n * @param {FormControl} user's login\r\n * @return {Promise | Observable} returns checking results\r\n */\r\n  forbiddenLogin(control: FormControl): Promise<any> | Observable<any> {    \r\n    let login = control.value;\r\n    let queryResult;\r\n    let promise = new Promise( (resolve, reject) => {\r\n      if (login.length >= 4) {\r\n        this.authService.checkUser(login).subscribe(\r\n          res => {\r\n            console.log('Result=');\r\n            queryResult = res[0];\r\n            if (res[0]) {\r\n              if (res[0].login == login) {\r\n                resolve({'loginIsForbidden': true});\r\n              }\r\n            } else {\r\n                resolve(null);\r\n            }\r\n          },\r\n\r\n          err => {\r\n            alert('Something went wrong!');\r\n          }\r\n        );\r\n      }\r\n    });\r\n    \r\n    return promise;\r\n  }\r\n\r\n/**\r\n * Check existence user with the same login\r\n * @param {FormControl} user's email\r\n * @return {Promise | Observable} returns checking results\r\n */\r\n  forbiddenEmail(control: FormControl): Promise<any> | Observable<any> {\r\n    let email = control.value;\r\n    let promise  = new Promise( (resolve, reject) => {\r\n      if (email.length >= 6) {\r\n        this.authService.checkEmail(email).subscribe(\r\n          res => {\r\n            console.log('Email= ');\r\n            if (res[0]) {\r\n              if (res[0].email == email) {\r\n                resolve({'emailIsForbidden': true});\r\n              }\r\n            } else {\r\n              resolve(null);\r\n            }\r\n          }, \r\n          err => {\r\n            alert(err);\r\n          }\r\n        );\r\n      }\r\n    })\r\n\r\n    return promise;\r\n  }\r\n  \r\n /**\r\n * Compare two passwords which were entered by user in appropriate fields\r\n * @param {FormGroup} users' passwords\r\n * @return {null || Obj} returns checking results\r\n */ \r\n  validatePasswords(registrationFormGroup: FormGroup) {\r\n    let password = registrationFormGroup.controls.password.value;\r\n    let repeatPassword = registrationFormGroup.controls.passwordRepeat.value;\r\n    // console.log(password);\r\n    // console.log(repeatPassword);\r\n    if (repeatPassword.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    if (repeatPassword !== password) {\r\n        return {\r\n            doesMatchPassword: true\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Create new user object and sign up it using 'authService'\r\n */\r\n  onSignUp() {\r\n    console.log(this.registrationForm.value);\r\n    console.log(this.registrationForm);\r\n    let userInfo = this.registrationForm.value;\r\n    let newUser = new User(userInfo.firstName, userInfo.lastName,\r\n                           userInfo.login, userInfo.passwords.password,\r\n                           userInfo.phone, userInfo.email,\r\n                           userInfo.address);\r\n    console.log(newUser);\r\n\r\n    if (this.registrationForm.valid) {\r\n      this.authService.signUp(newUser);\r\n    }                         \r\n  }\r\n\r\n    //It's not used\r\n    forbiddenPassword(control: FormControl):  Promise<any> | Observable<any> {\r\n      this.userPassword = control.value;\r\n      let promise = new Promise( (resolve, reject) => {\r\n        if (this.userPassword != this.userRepeatedPassword) {\r\n          resolve({\"isPasswordDifferent\": true});\r\n          console.log('y');\r\n        } else {\r\n          console.log('n');\r\n          resolve(null);\r\n        }\r\n      });\r\n      return promise;\r\n    }\r\n  \r\n    //It's not used\r\n    forbiddenRepeatedPassword(control: FormControl):  {[s: string]: boolean} {\r\n      this.userRepeatedPassword = control.value;\r\n      console.log(this.userRepeatedPassword);\r\n      return {'password': true};\r\n    }\r\n}\r\n","import { Cart } from './../cart/cart/cart.model';\r\n\r\nexport class User {\r\n    public userId: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public login: string;\r\n    public password: string;\r\n    public phone: string;\r\n    public email: string;\r\n    public address: string;\r\n\r\n    constructor(fName: string,  lName: string, login: string,\r\n                password: string, phone: string,\r\n                email: string, address: string) {\r\n        this.firstName = fName;\r\n        this.lastName = lName;\r\n        this.login = login;\r\n        this.password = password;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.address = address;\r\n        this.userId = this.randomId(1000, 1);\r\n    }\r\n\r\n    randomId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}","import { Product } from 'src/app/shared/product.model';\r\n\r\nexport class Cart {\r\n    public products: Array<Product>;\r\n    public totalPrice: number;\r\n    public id: number;\r\n    public userId: number;\r\n    public cartId: number;\r\n\r\n    constructor(products?: Array<Product>) {\r\n        this.products = products ? products : [];\r\n        this.cartId = this.randomId(1, 10000);\r\n        this.totalPrice = 0;\r\n    }\r\n\r\n    setUserId(userData) {\r\n        this.id = userData.id;\r\n        this.userId = userData.userId;\r\n    }\r\n\r\n    setCartId(id) {\r\n        this.cartId = id;\r\n    }\r\n\r\n    getCart(): Array<Product> {\r\n       // console.log(this.products);\r\n        return this.products;\r\n    }\r\n\r\n    setProducts(products) {\r\n        this.products = products;\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        let productId = product.id;\r\n       \r\n        if (!this.checkForDublicates(productId)) {\r\n            product[\"productQuantity\"] = 1;\r\n            this.products.push(product);\r\n        } else {\r\n            this.products.forEach( item => {\r\n                if (item.id == productId ) {\r\n                    item[\"productQuantity\"] += 1;\r\n                }\r\n            }) \r\n        }\r\n\r\n        this.calculateTotalPrice();    \r\n    }\r\n\r\n    deleteProductById(id) {\r\n        let deleteWithId;\r\n        this.products.forEach( (item, index) => {\r\n            if ( item.id == id ) {\r\n                deleteWithId = index;\r\n            }\r\n        });\r\n\r\n        this.products.splice(deleteWithId, 1);\r\n    }\r\n\r\n    checkForDublicates(id): boolean {\r\n        let isDublicated = false;\r\n        this.products.forEach( item => {\r\n            if (item.id == id) {\r\n                isDublicated = true\r\n            }\r\n        });\r\n    \r\n        return isDublicated;\r\n    }\r\n\r\n    calculateTotalPrice() {\r\n        let price = 0;\r\n        this.products.forEach( item => {\r\n            price += item.productPrice * item.productQuantity;\r\n        });\r\n\r\n        this.totalPrice = price;\r\n    }\r\n\r\n    getTotalPrice() {\r\n        this.calculateTotalPrice();\r\n        return this.totalPrice;\r\n    }  \r\n\r\n    calculateProductsQuantity(): number {\r\n        let productQuantity = 0;\r\n\r\n        this.products.forEach( item => {\r\n            productQuantity += item.productQuantity;\r\n        });\r\n\r\n        return productQuantity;\r\n    }\r\n\r\n    cleanCart() {\r\n        this.products = [];\r\n    }\r\n\r\n    randomId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}","import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EditModalService {\r\n    editMode: boolean = false;\r\n    onEditChange = new Subject();\r\n    \r\n    constructor() {\r\n        this.onEditChange.next(this.editMode);\r\n    }\r\n\r\n    toggleEditMode() {\r\n        this.editMode = !this.editMode;\r\n        this.onEditChange.next(this.editMode);\r\n    }\r\n}","import { ProductCart } from './product-cart.service';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { AuthService } from './../../auth/auth.service';\nimport { Injectable } from '@angular/core';\nimport { Order } from 'src/app/cart/order.model';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  apiUrl: any = \"http://localhost:3000\";\n\n  constructor(private authService: AuthService,\n              private http: HttpClient,\n              private productCart: ProductCart,\n              private router: Router) {\n  }\n\n  makeAnOrder(order: Order) {\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\n    let id = this.authService.getCurrentUser().id;\n    order.setUserId(id);\n    console.log(order);\n    \n    this.http.post(`${this.apiUrl}/orders`, order, { headers: headers})\n        .subscribe(\n            res => {\n                //console.log(res);\n                alert('Your order is succesfully done!');\n                this.productCart.cleanCart();\n                this.router.navigate(['dashboard/products/pizza']);\n            },\n            err => {\n                //console.log(err);\n                alert('Something went wrong!');\n            }\n        );\n  }\n\n  getOrders(): Observable<any> {\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\n    let id = this.authService.getCurrentUser().id;\n    return this.http.get(`${this.apiUrl}/orders?userId=${id}`, { headers: headers });\n  }\n\n}\n","import { Cart } from './../../cart/cart/cart.model';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { Injectable  } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Product } from '../product.model';\r\nimport { Subject, Subscription, Observable } from 'rxjs';\r\nimport { Order } from 'src/app/cart/order.model';\r\n\r\n\r\n@Injectable()\r\nexport class ProductCart {\r\n    cart = new Cart();\r\n    onProductAdded = new Subject<any>();\r\n    gettingProducts = new Subscription();\r\n    apiUrl: any = \"http://localhost:3000\";\r\n\r\n    constructor(private authService: AuthService,\r\n                private http: HttpClient) {\r\n                //this.unsubscribeFromProductsGettedFromServer();  \r\n                this.checkCartExistenseByUserId();\r\n                this.getCartFromServer();\r\n    }\r\n    \r\n    //Checking cart existense on the server\r\n    checkCartExistenseByUserId() {\r\n        this.cart.setUserId(this.authService.getCurrentUser());\r\n        let userId = this.authService.getCurrentUser().id;\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.get(`${this.apiUrl}/cart?id=${userId}`, { headers: headers})\r\n            .subscribe(\r\n                (res: Array<any>) => {\r\n                    if (res.length != 0) {\r\n                     //  alert('Cart exists!');\r\n                        console.log(res);\r\n                    } else {\r\n                       // alert('Cart doesn\\'t exist!');\r\n                        this.createCartOnServer();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    //For creating cart on the server if it doesn't exist\r\n    createCartOnServer() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.post(`${this.apiUrl}/cart`, this.cart, { headers: headers})\r\n            .subscribe(\r\n                res => {\r\n                    alert('Cart is  created!');\r\n                }\r\n            );    \r\n    }\r\n\r\n    addProducts(product: Product) {\r\n        this.cart.addProduct(product);\r\n        this.synchCartWithServer();\r\n        this.onProductAdded.next(this.cart.getCart());\r\n    }\r\n\r\n    synchCartWithServer() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        let userData = this.authService.getCurrentUser();\r\n\r\n        console.log(userData);   \r\n\r\n        this.http.put(`${this.apiUrl}/cart/${this.cart.id}`, this.cart, { headers: headers})\r\n            .subscribe(\r\n                res => {\r\n                   // alert('successfully added');\r\n                },\r\n                err => {\r\n                    //alert('error added');\r\n                }\r\n            );\r\n    }\r\n\r\n    getCartFromServer() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        let userId = this.authService.getCurrentUser().id;\r\n        this.gettingProducts = this.http.get(`${this.apiUrl}/cart/${userId}`, { headers: headers})\r\n            .subscribe(\r\n                res => {\r\n                    //console.log('Getted from server!');\r\n                    this.cart.setProducts(res[\"products\"]);\r\n                    this.cart.setCartId(res[\"cartId\"]);\r\n                    this.onProductAdded.next(this.cart.getCart());     \r\n                    //console.log(this.cart);\r\n                    // alert('Success getting cart!!!');\r\n                },\r\n                err => {\r\n                    alert('Error while getting cart from server!');\r\n                }\r\n            ) \r\n    }\r\n\r\n    unsubscribeFromProductsGettedFromServer() {\r\n        this.authService.isUserAuthorized\r\n        .subscribe(\r\n            res => {\r\n                if (!res) {\r\n                   this.gettingProducts.unsubscribe(); \r\n                }\r\n            },\r\n\r\n            err => {\r\n                alert(err);\r\n            }\r\n        )\r\n    }\r\n     \r\n    calculateProductsQuantity(): number {\r\n        return this.cart.calculateProductsQuantity();\r\n    }\r\n\r\n    getProducts(): Array<Product> {\r\n        return this.cart.getCart();\r\n    }\r\n\r\n    deleteProductById(id) {\r\n        this.cart.deleteProductById(id);\r\n        this.onProductAdded.next(this.cart.getCart());\r\n        this.synchCartWithServer();\r\n    }\r\n\r\n    getTotalPrice() {\r\n        return this.cart.getTotalPrice();\r\n    }  \r\n\r\n    //It's not realized\r\n    onOrderSuccess() {\r\n        //TODO\r\n    }\r\n\r\n    //It's not realized\r\n    onOrderError() {\r\n        //TODO\r\n    }\r\n\r\n    getProductCart(): Cart {\r\n        return this.cart;\r\n    }\r\n\r\n    cleanCart() {\r\n        this.cart.cleanCart();\r\n        this.synchCartWithServer();\r\n        this.onProductAdded.next(this.cart);\r\n    }\r\n\r\n}","import { Product } from './../product.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpHeaderResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    apiUrl: string = \"http://localhost:3000\";\r\n    \r\n    products = {\r\n        // pizza: [\r\n        //     new Product(\"Піца Емілія\", \"./../../assets/pizza1.jpg\", \"550\", \"30\", \"Шинка, моцарела, помідори, кукурудза, соус часниковий\", 200),\r\n        //     new Product(\"Чотири Сири Класична\", \"./../../assets/pizza3.jpg\", \"550\", \"30\", \" Моцарела, пармезан, сир чедер, сир дорблю, соус вершковий, білий сир Брі\", 199),\r\n        //     new Product(\"Піца Емілія\", \"./../../assets/pizza1.jpg\", \"550\", \"30\", \"Шинка, моцарела, помідори, кукурудза, соус часниковий\", 200),\r\n        //     new Product(\"Чотири Сири Класична\", \"./../../assets/pizza3.jpg\", \"550\", \"30\", \" Моцарела, пармезан, сир чедер, сир дорблю, соус вершковий, білий сир Брі\", 199),\r\n        //     new Product(\"Піца Емілія\", \"./../../assets/pizza1.jpg\", \"550\", \"30\", \"Шинка, моцарела, помідори, кукурудза, соус часниковий\", 200)    \r\n        // ]    \r\n    }\r\n\r\n    constructor(private http: HttpClient) { }\r\n \r\n    saveProducts() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        this.http.post(this.apiUrl, this.products, { headers: headers})\r\n            .subscribe(\r\n                res => {   \r\n                    console.log(res);\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                }\r\n            ) \r\n    }\r\n    \r\n    getProducts() {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        return this.http.get(`${this.apiUrl}/pizza`, {headers: headers});\r\n    }\r\n\r\n    getProductsByCategory(category: string): Observable<any> {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n        return this.http.get(`${this.apiUrl}/${category}`, {headers: headers});\r\n    }\r\n}\r\n\r\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}