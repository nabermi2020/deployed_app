{"version":3,"sources":["webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/cart/cart.component.html","webpack:///./src/app/cart/cart/cart.component.ts","webpack:///./src/app/cart/confirmation-popup/confirmation-popup.component.html","webpack:///./src/app/cart/confirmation-popup/confirmation-popup.component.ts","webpack:///./src/app/cart/order-confirmation/order-confirmation.component.html","webpack:///./src/app/cart/order-confirmation/order-confirmation.component.ts","webpack:///./src/app/cart/order.model.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/filter-products.pipe.ts","webpack:///./src/app/dashboard/filters/filters.component.html","webpack:///./src/app/dashboard/filters/filters.component.ts","webpack:///./src/app/dashboard/product-dashboard/product-dashboard.component.html","webpack:///./src/app/dashboard/product-dashboard/product-dashboard.component.ts","webpack:///./src/app/dashboard/product-grid/product-grid.component.html","webpack:///./src/app/dashboard/product-grid/product-grid.component.ts","webpack:///./src/app/dashboard/product-item/product-item.component.html","webpack:///./src/app/dashboard/product-item/product-item.component.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/format-phone.pipe.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/loading/loading.component.html","webpack:///./src/app/shared/loading/loading.component.ts","webpack:///./src/app/shared/product.model.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/shorten.pipe.ts","webpack:///./src/app/shared/side-bar/side-bar.component.html","webpack:///./src/app/shared/side-bar/side-bar.component.ts","webpack:///./src/app/userprofile/edit-profile/edit-profile.component.html","webpack:///./src/app/userprofile/edit-profile/edit-profile.component.ts","webpack:///./src/app/userprofile/order-history/order-history.component.html","webpack:///./src/app/userprofile/order-history/order-history.component.ts","webpack:///./src/app/userprofile/profile-detail/profile-detail.component.html","webpack:///./src/app/userprofile/profile-detail/profile-detail.component.ts","webpack:///./src/app/userprofile/profile.module.ts","webpack:///./src/app/userprofile/profile/profile.component.html","webpack:///./src/app/userprofile/profile/profile.component.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-ngfactory.js","sourcesContent":["import { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\r\nimport { ConfirmationPopupComponent } from './confirmation-popup/confirmation-popup.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CartComponent,\r\n        OrderConfirmationComponent,\r\n        ConfirmationPopupComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        SharedModule \r\n    ],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class CartModule {}","<div id=\"productCart\">\r\n    <div id=\"productCartHeader\">\r\n        <header> \r\n            <h4>Product Cart</h4>\r\n        </header>\r\n    </div>\r\n\r\n    <div id=\"products\" class=\"align-middle\">\r\n        <div id=\"emptyCart\" *ngIf=\"cart.length == 0\" >\r\n            <h2>Cart is empty</h2>\r\n        </div>\r\n\r\n        <div *ngFor=\"let product of cart\"\r\n              class=\"product\">\r\n            <div class=\"productLogoWrapper\">\r\n                <img [src]=\"product.imgPath\" class=\"img-responsive\"  >\r\n            </div>\r\n\r\n            <div class=\"productTitle\">\r\n                <h5> {{ product.productTitle }} X {{ product.productQuantity || ''}} </h5>\r\n            </div>\r\n\r\n            <!--Section-->\r\n            <!--\r\n            -  1  +\r\n            -->   \r\n\r\n            <div class=\"productPrice\">\r\n                <h5>{{ product.productPrice * product.productQuantity}} $</h5>\r\n            </div>\r\n\r\n            <div class=\"deleteItem\">\r\n                <button class=\"btn btn-danger\" (click)=\"deleteCurrentProduct(product)\">X</button>\r\n            </div>\r\n             \r\n        </div>     \r\n    </div>\r\n\r\n    <div id=\"controls\" *ngIf=\"cart.length\">\r\n        <button class=\"btn btn-success\" id=\"buyProducts\" style=\"min-width:180px\"(click)=\"makeAnOrder()\">BUY</button>\r\n        <div id=\"totalPrice\">{{ totalPrice }} $</div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductCart } from 'src/app/shared/services/product-cart.service';\r\nimport { Product } from 'src/app/shared/product.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cart: Array<Product> = [];\r\n  totalPrice: any;\r\n \r\n  constructor(private productCart: ProductCart,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.cart = this.productCart.getProducts();\r\n    console.log(this.cart);\r\n    this.totalPrice = this.productCart.getTotalPrice();\r\n  }\r\n\r\n /**\r\n  * \r\n  * @param {Product} selected product \r\n  */ \r\n  deleteCurrentProduct(product: Product) {\r\n    let productId = product.id;\r\n    this.productCart.deleteProductById(productId);\r\n    this.totalPrice = this.productCart.getTotalPrice();\r\n  }\r\n\r\n/**\r\n * Navigating to 'dashboard' after order is made\r\n */  \r\n  makeAnOrder() {\r\n    this.router.navigate(['/dashboard/order-confirmation']);\r\n  }\r\n\r\n}\r\n","<div id=\"confirmationPopUp\">\n  <div id=\"closePopImgWrapper\" (click)=\"closePopUp()\"><b>X</b></div>\n  <div id=\"confirmationMsg\">\n    Are you sure you want to make an order?\n  </div>\n  <div id=\"popUpControls\">\n    <button id=\"confirm\" (click)=\"confirmAnOrder()\">YES</button>\n    <button id=\"cancel\" (click)=\"closePopUp()\">NO</button>\n  </div>\n</div>\n","import { LoadingService } from './../../shared/services/loading.service';\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\n\n@Component({\n  selector: 'app-confirmation-popup',\n  templateUrl: './confirmation-popup.component.html',\n  styleUrls: ['./confirmation-popup.component.scss']\n})\nexport class ConfirmationPopupComponent implements OnInit {\n  @Output() onOrderConfirmed = new EventEmitter();\n  isOrderConfirmed: boolean = false;\n\n  constructor(private editModal: EditModalService, private loadingService: LoadingService) { }\n\n  ngOnInit() {\n    \n  }\n\n  confirmAnOrder() {\n    this.isOrderConfirmed = true; \n    this.onOrderConfirmed.emit(this.isOrderConfirmed);\n    this.closePopUp();\n  }\n\n  closePopUp() {\n    this.editModal.toggleEditMode();  \n    this.isOrderConfirmed = false;\n  }\n\n}\n","<div id=\"orderConfirmation\">\n        \n  <div class=\"row\">\n      <div class=\"col-md-8\">\n          <div id=\"orderDetail\">\n            \n            <div id=\"orderDetailHeader\">\n                <h4>Enter delivery info</h4>\n            </div>\n            <form id=\"order\"\n                  #form=ngForm\n                  (ngSubmit)=\"showConfirmationPopUp(form)\">\n                  <div id=\"orderInfo\">\n                  <div class=\"row\">\n\n                  <div class=\"col-md-6 col-xs-6\">\n                    <div class=\"form-group\">\n                        <label for=\"firstName\">\n                            First Name:\n                            <input type=\"text\"\n                                   placeholder=\"Enter first name\"\n                                   class=\"form-control\"\n                                   id=\"firstName\"\n                                   required\n                                   firstName\n                                   #firstName=\"ngModel\"\n                                   name=\"firstName\"\n                                   ngModel>\n                        </label>\n                        <div *ngIf=\"!firstName.valid && firstName.touched\" class=\"validationErrors\">First name isn't valid!</div>\n                    </div>\n                </div>\n\n             \n                <div class=\"col-md-6 col-xs-6\">\n                    <div class=\"form-group\">\n                        <label for=\"Last Name\">\n                            Last Name:\n                            <input type=\"text\"\n                                   placeholder=\"Enter last name\"\n                                   class=\"form-control\"\n                                   id=\"lastName\"\n                                   required\n                                   lastName\n                                   #lastName=\"ngModel\"\n                                   name=\"lastName\"\n                                   ngModel>\n                        </label>\n                        <div *ngIf=\"!lastName.valid && lastName.touched\" class=\"validationErrors\">Last name isn't valid!</div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 col-xs-6\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">\n                            Email:\n                            <input type=\"email\"\n                                   placeholder=\"Enter email\"\n                                   class=\"form-control\"\n                                   id=\"email\"\n                                   required\n                                   email\n                                   #email=\"ngModel\"\n                                   name=\"email\"\n                                   ngModel>\n                        </label>\n                        <div *ngIf=\"!email.valid && email.touched\" class=\"validationErrors\">Email isn't valid!</div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 col-xs-6\">\n                    <div class=\"form-group\">\n                        <label for=\"phone\">\n                            Phone:\n                            <input type=\"text\"\n                                   placeholder=\"Enter phone\"\n                                   class=\"form-control\"\n                                   id=\"phone\"\n                                   required\n                                   phone\n                                   #phone=\"ngModel\"\n                                   name=\"phone\"\n                                   ngModel>\n                        </label>\n                        <div *ngIf=\"!phone.valid && phone.touched\" class=\"validationErrors\">Phone isn't valid!</div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 col-xs-6\">\n                        <div class=\"form-group\">\n                            <label for=\"address\">\n                                Address:\n                                <input type=\"text\"\n                                       placeholder=\"Enter address\"\n                                       class=\"form-control\"\n                                       id=\"address\"\n                                       required\n                                       address\n                                       #address=\"ngModel\"\n                                       name=\"address\"\n                                       ngModel>\n                            </label>\n                            <div *ngIf=\"!address.valid && address.touched\" class=\"validationErrors\">Address isn't valid!</div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6 col-xs-6\">\n                            <div class=\"form-group\">\n                                <label for=\"orderTime\">\n                                    Order time:\n                                    <select name=\"orderTime\"\n                                            id=\"orderTime\"\n                                            required\n                                            orderTime\n                                            #orderTime=\"ngModel\"\n                                            class=\"form-control\"\n                                            ngModel>\n                                        <option value=\"1200\">12 00</option>\n                                        <option value=\"1300\">13 00</option>\n                                        <option value=\"1400\">14 00</option>\n                                        <option value=\"1500\">15 00</option>\n                                        <option value=\"1600\">16 00</option>\n                                        <option value=\"1700\">17 00</option>    \n                                    </select>\n                                    <div *ngIf=\"!orderTime.valid && orderTime.touched\" class=\"validationErrors\">Delivery time is required!</div>\n                                </label>\n                            </div>\n                        </div>\n\n                  </div>\n                  <div class=\"controlWrapper\">\n                    <button class=\"btn btn-danger\"\n                        type=\"submit\"\n                        id=\"orderControl\" \n                        [disabled]=\"!form.valid\">Order</button>\n                  </div>\n                  \n                </div>\n                  \n                \n            </form>\n          </div>\n      </div>\n      <div class=\"col-md-4\">\n          <div id=\"cartWidget\">\n              <div id=\"cartWidgetHeader\">\n                  <h5>Cart</h5>\n              </div>\n             \n              <div id=\"productList\">\n                <div *ngFor=\"let product of cart\" class=\"productItem\">\n                    <div class=\"productImgWrapper\">\n                        <img [src]=\"product.imgPath\"  >\n                    </div>\n\n                    <div class=\"productTitle\">\n                        {{ product.productTitle }} X {{ product.productQuantity || ''}}\n                    </div>\n\n                    <div class=\"productPrice\">\n                        {{ product.productPrice * product.productQuantity }} $\n                    </div>\n\n                    <div class=\"deleteItem\">\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"deleteProductFromList(product)\">X</button>\n                    </div>\n                </div>\n              </div>\n\n              <div id=\"cartWidgetFooter\">\n                  <div id=\"totalPriceWrapper\">\n                      Total\n                  </div>\n\n                  <div id=\"totalPrice\">\n                        {{ totalPrice}} $\n                    </div>\n              </div>\n\n              \n          </div>\n      </div>\n  </div>\n  \n</div>\n\n<ng-container *ngIf=\"isConfirmationPopUpEnabled\">\n    <app-confirmation-popup (onOrderConfirmed)=\"submitAnOrder($event)\"></app-confirmation-popup>\n</ng-container>\n\n<app-loading></app-loading>\n\n\n","import { AuthService } from './../../auth/auth.service';\nimport { ProductCart } from 'src/app/shared/services/product-cart.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Product } from 'src/app/shared/product.model';\nimport { Order } from '../order.model';\nimport { OrdersService } from 'src/app/shared/services/orders.service';\n \nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\n\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.scss']\n})\nexport class OrderConfirmationComponent implements OnInit {\n  cart: Array<Product> = [];\n  formData: NgForm;\n  userData: any;\n  totalPrice: any;\n  isConfirmationPopUpEnabled: boolean = false;\n  @ViewChild('form') form: NgForm;\n\n  constructor(private productCart: ProductCart,\n              private ordersService: OrdersService,\n              private authService: AuthService,\n              private router: Router,\n              private editModal: EditModalService) { }\n\n  ngOnInit() {\n    this.cart = this.productCart.getProducts();\n    this.totalPrice = this.productCart.getTotalPrice();\n    this.userData = this.authService.getCurrentUser();\n    this.preFillForm();\n    console.log(this.cart);\n\n    this.editModal.onEditChange.subscribe(\n      (res: boolean) => {\n        this.isConfirmationPopUpEnabled = res;\n      })\n  }\n\n/**\n * Prefill order confirmation screen\n */  \n  preFillForm() {\n     setTimeout( () => {\n      this.form.setValue({\n        address: this.userData.address,\n        email: this.userData.email,\n        firstName: this.userData.firstName,\n        lastName: this.userData.lastName,\n        phone: this.userData.phone,\n        orderTime: ''\n      });\n     },); \n  }\n\n/**\n * Order confirmation\n * @param {ngForm} form data\n */  \n  onOrderSubmit(form) {\n    let firstName = form.value.firstName;\n    let lastName = form.value.lastName;\n    let email = form.value.email;\n    let phone = form.value.phone;\n    let address = form.value.address;\n    let orderTime = form.value.orderTime;\n    \n    let order = new Order(firstName, lastName,\n                          email, phone,\n                          address, orderTime,\n                          this.productCart.getProductCart());\n                      \n    this.ordersService.makeAnOrder(order);\n    // console.log(order);\n  }\n\n\n  submitAnOrder(formConfirmation) {\n    this.onOrderSubmit(this.formData);\n  }\n\n  showConfirmationPopUp(form) {\n    this.formData = form;\n    console.log(this.formData);\n    this.isConfirmationPopUpEnabled = !this.isConfirmationPopUpEnabled;\n    this.editModal.toggleEditMode();\n    //alert('Hello');\n  }\n  \n /**\n  * Delete product by id\n  * @param {Product} selected product \n  */ \n  deleteProductFromList(product: Product) {\n    let productId = product.id;\n    this.productCart.deleteProductById(productId);\n    this.totalPrice = this.productCart.getTotalPrice();\n\n    if (this.cart.length == 0 ) {\n      this.router.navigate(['dashboard/products/pizza']);\n    }\n    \n  }\n}\n","import { Cart } from './cart/cart.model';\r\nimport { Product } from '../shared/product.model';\r\n\r\nexport class Order {\r\n    public userId: any;\r\n    public orderId: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public email: string;\r\n    public phone: string;\r\n    public address: string;\r\n    public deliveryTime: string;\r\n    public orderTime: Date;\r\n    public cart: Cart;\r\n    public totalPrice: any;\r\n    public products: Array<Product>;\r\n\r\n    constructor(firstName, lastName,\r\n                email, phone,\r\n                address, deliveryTime, cart: Cart) {\r\n\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.phone = phone;\r\n        this.address = address;\r\n        this.deliveryTime = deliveryTime;\r\n        this.orderTime = new Date();\r\n        this.orderId = this.generateOrderId(1, 1000);\r\n        this.totalPrice = cart.getTotalPrice();\r\n        this.products = cart.getCart();\r\n\r\n    }\r\n\r\n    setUserId(id) {\r\n        this.userId = id;   \r\n    }\r\n\r\n    generateOrderId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}","import { OrderConfirmationComponent } from './../cart/order-confirmation/order-confirmation.component';\r\nimport { CartComponent } from '../cart/cart/cart.component';\r\nimport { ProfileDetailComponent } from './../userprofile/profile-detail/profile-detail.component';\r\nimport { AuthGuard } from './../auth/auth-guard.service';\r\nimport { ProfileComponent } from './../userprofile/profile/profile.component';\r\nimport { ProductDashboardComponent } from './product-dashboard/product-dashboard.component';\r\nimport { Routes, RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProductGridComponent } from './product-grid/product-grid.component';\r\nimport { OrderHistoryComponent } from '../userprofile/order-history/order-history.component';\r\n\r\nconst dashboardRoutes: Routes = [\r\n    { path: '', component: ProductDashboardComponent, canActivate: [AuthGuard], children: [\r\n        { path: 'profile', component: ProfileComponent, children: [\r\n           \r\n           { path: 'user-info', component: ProfileDetailComponent },\r\n           { path: 'order-history', component: OrderHistoryComponent }, \r\n        ]},\r\n        \r\n        { path: \"products\", component: ProductGridComponent, children: [\r\n           { path: ':cat', component: ProductGridComponent, canActivate: [AuthGuard]},\r\n        ] },\r\n        \r\n        { path: 'cart', component: CartComponent },\r\n        { path: 'order-confirmation', component: OrderConfirmationComponent}\r\n    ]},\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(dashboardRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class DashboardRoutingModule {}","import { SharedModule } from './../shared/shared.module';\r\nimport { CartModule } from './../cart/cart.module';\r\nimport { ProfileModule } from './../userprofile/profile.module';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProductDashboardComponent } from './product-dashboard/product-dashboard.component';\r\nimport { ProductGridComponent } from './product-grid/product-grid.component';\r\nimport { ProductItemComponent } from './product-item/product-item.component';\r\nimport { FiltersComponent } from './filters/filters.component';\r\nimport { FilterProductsPipe } from './filter-products.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n       ProductDashboardComponent, \r\n       ProductGridComponent,\r\n       ProductItemComponent,\r\n       FiltersComponent,\r\n       FilterProductsPipe,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        DashboardRoutingModule,\r\n        ProfileModule,\r\n        SharedModule,\r\n        CartModule\r\n    ],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class DashboardModule {}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class FilterProductsPipe implements PipeTransform {\n\n  transform(value: any, category?: any): any {\n    let filteredProducts = [];\n    if ( value ) {\n      value.forEach( (item) => {\n        if ( item.productCategories.includes(category)) {\n          filteredProducts.push(item);\n        }\n      });\n    }\n\n    return filteredProducts;\n  }\n}\n","<ul class=\"productsFilter\">\n    <li *ngFor=\"let filter of activeFilter\"  [ngClass]=\"activeCategory == filter ? 'activeCat' : ''\" (click)=\"filterProductsByCategory(filter)\">\n        {{ filter }}\n    </li>\n</ul>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent implements OnInit {\n  activeCategory: string = 'All';\n  @Output() onActiveCategorySelected = new EventEmitter();\n  activeFilter: [];\n  filters =  {\n    'pizza': ['All', 'Vegetarian', 'With Meat', 'With seafood', 'With Cheese'],\n    'drinks': ['All', 'Alcoholic', 'Non alcoholic', 'Lemonades'],\n    'salads': ['All', 'Vegetarian', 'Seafood', 'With Meat']\n  }\n\n  constructor(private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activeRoute.children[0].params\n      .subscribe(\n        res => {\n          this.activeCategory = res[\"cat\"];\n          this.activeFilter = this.filters[this.activeCategory];\n          this.activeCategory = 'All';\n        }\n      )\n  }\n\n /**\n  * Set active category\n  * @param {String} product's category \n  */ \n  filterProductsByCategory(filter) {\n    this.activeCategory = filter;\n    this.onActiveCategorySelected.emit(filter);\n  }\n\n}\n","<div id=\"dashboard\">\n  <ng-container *ngIf=\"isModalEnabled\">\n      <div id=\"edit-modal-shadow\">\n      </div>\n  </ng-container>\n\n  <app-loading></app-loading>\n  <div id=\"leftSection\">\n      <app-side-bar></app-side-bar>\n  </div>\n  \n  <div id=\"rightSection\">\n    <div id=\"wrapper\">\n      <app-header></app-header>\n      \n     \n      <router-outlet></router-outlet>\n      <app-footer></app-footer>\n    </div>\n    \n  </div> \n  \n\n  \n  \n \n</div>\n\n \n","import { LoadingService } from '../../shared/services/loading.service';\r\nimport { ProductCart } from '../../shared/services/product-cart.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../shared/services/products.service';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-product-dashboard',\r\n  templateUrl: './product-dashboard.component.html',\r\n  styleUrls: ['./product-dashboard.component.scss']\r\n})\r\nexport class ProductDashboardComponent implements OnInit, OnDestroy {\r\n  products: any[];\r\n  isModalEnabled: boolean = false;\r\n  editMode = new Subscription();\r\n\r\n  constructor(private authService: AuthService,\r\n              private productsService: ProductService,\r\n              private route: ActivatedRoute,\r\n              private editModal: EditModalService,\r\n              private cartService: ProductCart,\r\n              private changeDetector: ChangeDetectorRef,\r\n              private loadingService: LoadingService) { }\r\n\r\n  ngOnInit() {\r\n    this.editMode = this.editModal.onEditChange.subscribe(\r\n      (res: boolean) => {\r\n        this.isModalEnabled = res;\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    \r\n    )\r\n\r\n    this.cartService.checkCartExistenseByUserId();\r\n    this.cartService.getCartFromServer();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editMode.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div id=\"products-grid\">\n  <app-filters (onActiveCategorySelected)=\"setFilterCategory($event)\"></app-filters>\n    <div class=\"row\">\n        <div class=\"col-md-4 col-sm-6\" *ngFor=\"let product of products | filterProducts:activeFilter\">\n          <app-product-item [productData]='product'></app-product-item>\n        </div>\n    </div>\n  </div>\n","import { LoadingService } from '../../shared/services/loading.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/products.service';\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-product-grid',\n  templateUrl: './product-grid.component.html',\n  styleUrls: ['./product-grid.component.scss']\n})\n\nexport class ProductGridComponent implements OnInit, OnDestroy {\n  products: any;\n  activeCategory: string = \"pizza\";\n  activeFilter: string = \"All\";\n  urlParSubscription = new Subscription();\n  productSubscription = new Subscription();\n  productsByCategorySubscription = new Subscription();\n  constructor(private productsService: ProductService,\n              private route: ActivatedRoute,\n              private editMode: EditModalService,\n              private loadingService: LoadingService,\n              private editModal: EditModalService) { }\n\n  ngOnInit() {\n    this.getProducts();\n \n\n     this.urlParSubscription = this.route.firstChild.params\n       .subscribe( \n         (par: Params) => {\n           this.activeCategory = par[\"cat\"];\n           this.loadingService.toggleLoading();\n           this.editModal.toggleEditMode();\n           this.productsByCategorySubscription = this.productsService.getProductsByCategory(this.activeCategory)\n             .subscribe(\n               res => {\n                this.products = res;\n                this.activeFilter = \"All\";\n                this.loadingService.toggleLoading();\n                this.editModal.toggleEditMode();\n               },\n               \n               err => {\n                console.log(err);\n               });\n       })\n  }\n\n/**\n * Get products using 'productService'\n */  \n  getProducts() {\n    this.loadingService.toggleLoading();\n    this.editModal.toggleEditMode();\n    this.productSubscription = this.productsService.getProducts()\n    .subscribe(\n      res => {\n          this.products = res;\n          this.loadingService.toggleLoading();\n          this.editModal.toggleEditMode();\n      }, \n      err => {\n          console.log(err);\n      }\n    )\n  }\n\n /**\n  * Set filter category\n  * @param {String} product category \n  */ \n  setFilterCategory(cat) {\n    this.activeFilter = cat;\n  }\n\n  ngOnDestroy() {\n    this.urlParSubscription.unsubscribe();\n    this.productSubscription.unsubscribe();\n    this.productsByCategorySubscription.unsubscribe();\n  }\n\n}\n      ","<div class=\"product\">\n  <div class=\"imgWrapper\">\n    <img [src]= 'productData.imgPath' alt=\"pizza1\">\n  </div>\n\n  <div class=\"productDescription\">\n    <div class=\"productInfoAndPrice\">\n      <div class=\"productWeight\">{{ productData.productWeight }} gram {{ productData.productSize }} sm</div>\n      <div class=\"prPrice\">{{ productData.productPrice }} $</div>\n    </div>\n  \n    <div class=\"productTitle\"><h4>{{ productData.productTitle }}</h4></div>\n    <div class=\"ingredients\">{{ productData.productDescription }}</div>\n  </div>\n\n  <div class=\"addToCartWrapper\" [ngStyle]=\"{'background-color': success ? 'green' : 'red'}\">\n    <div class=\"productQuantity\">\n     <!-- - 1 +-->\n    </div>\n\n    <div class=\"addToCart\" (click)=\"addProductToCart()\">\n      {{ success ? 'Product is added!': 'Add To Cart'}}\n    </div>\n\n    <div class=\"productPrice\" *ngIf=\"!success\">\n      {{ productData.productPrice }} $\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Product } from 'src/app/shared/product.model';\r\nimport { ProductCart } from 'src/app/shared/services/product-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-product-item',\r\n  templateUrl: './product-item.component.html',\r\n  styleUrls: ['./product-item.component.scss']\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n  @Input() productData: Product;\r\n  success: boolean = false;\r\n\r\n  constructor(private productCartService: ProductCart) { }\r\n\r\n  ngOnInit() { }\r\n\r\n /**\r\n  * Add product to cart\r\n  */ \r\n  addProductToCart() {\r\n    this.success = true;\r\n    this.productCartService.addProducts(this.productData);\r\n    setTimeout(() => {\r\n      this.success = false;\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","<footer>\n  <div id=\"logoWrapper\">\n      <img src=\"../../../assets/logo.png\" id=\"footerLogo\">\n      <div id=\"footerTextWrapper\">\n        The best service for you\n      </div>\n      <div id=\"copyRight\">\n        &copy; {{ getCurrentYear() }} Food Delivery\n      </div>\n\n      <div id=\"developedBy\">\n          Developed by {{ author }}\n      </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  author: string = 'M.Naberezhnyi';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getCurrentYear() {\n    return new Date().getFullYear();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatPhone'\n})\nexport class FormatPhonePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any { \n    return '(' + value.substr(0, 3) + ')' + value.substr(3, 2) + '-' + value.substr(5, 2) + '-' + value.substr(7, 4);\n  }\n\n}\n","<header id=\"headerSection\">\r\n  <div id=\"activeCategory\">\r\n    <h2>{{ activeCategory }}</h2>\r\n  </div>\r\n  <div id=\"controlsWrapper\">\r\n    <div id=\"activeUser\">\r\n      Hello <a [routerLink]=\"['profile', 'user-info']\"><b>{{ activeUser.firstName}} {{ activeUser.lastName | shorten:1 }}</b></a> / \r\n      <a (click)=\"logOut()\">Log Out</a>\r\n    </div>\r\n    <div id=\"cart\" (click)=\"openCart()\">\r\n      <span id=\"cartCounter\" *ngIf=\"productsQuantity != 0\">{{ productsQuantity || 0 }}</span>\r\n     <!--\r\n      <div id=\"price\">\r\n          {{ totalPrice || 0 }}  $\r\n        </div>\r\n        -->\r\n      <img src=\"./../../../assets/cart.png\">\r\n       \r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n","import { ProductCart } from '../services/product-cart.service';\r\nimport { User } from '../../auth/user.model';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  //activeCategory: string = \"Pizza\";\r\n  activeUser: User;\r\n  id: number;\r\n  productsQuantity: any;  \r\n  totalPrice: any;\r\n  activeCategory: any;\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router,\r\n              private productCartService: ProductCart) {             \r\n    this.productsQuantity = this.productCartService.calculateProductsQuantity();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activeUser = this.authService.getCurrentUser();\r\n     \r\n    this.authService.userData\r\n      .subscribe(\r\n        res => {\r\n          this.activeUser =  this.authService.getCurrentUser();\r\n          this.productsQuantity = this.productCartService.calculateProductsQuantity();\r\n          // console.log(this.productsQuantity);\r\n          // console.log(res);\r\n        },   \r\n        err => {\r\n          alert('Something went wrong!');\r\n        }\r\n      )\r\n    this.id = this.activeUser.userId;\r\n      this.productCartService.onProductAdded  \r\n      .subscribe( \r\n        res => {\r\n          this.productsQuantity = this.productCartService.calculateProductsQuantity();\r\n          this.totalPrice = this.productCartService.getTotalPrice();\r\n          //console.log(this.productsQuantity);\r\n        },\r\n        err => {\r\n          alert('something went wrong!');\r\n        }\r\n      )\r\n  }\r\n\r\n/**\r\n * Provide logout option and navigating to 'Auth screen'\r\n */  \r\n  logOut() {\r\n    this.authService.logOut();\r\n    //this.productCartService.onProductAdded.unsubscribe();\r\n    this.router.navigate(['/']); \r\n  }\r\n\r\n /**\r\n  * Navigate tp 'cart' component\r\n  */ \r\n  openCart() {\r\n    this.router.navigate(['dashboard/cart']);\r\n  }\r\n\r\n}\r\n","<div id=\"loading\"\n     *ngIf=\"showLoading\">\n  <div class=\"lds-roller\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</div>\n","import { LoadingService } from '../services/loading.service';\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit, OnDestroy {\n  showLoading: boolean = false;\n\n  constructor(private editProfile: EditModalService, \n              private loadingService: LoadingService,\n              private changeDetector: ChangeDetectorRef ) {}\n  \n  ngOnInit() {\n  \n   this.changeDetector.detectChanges();\n   this.loadingService.onLoadingChange\n   .subscribe(\n     (res: boolean) => { \n        this.showLoading = res;\n        console.log(res);\n     }\n   );\n  }\n\n  ngOnDestroy() {\n    this.showLoading = true;\n  }\n}","export class Product {\r\n    public id: number;\r\n    public imgPath: string;\r\n    public productWeight: string;\r\n    public productSize: string;\r\n    public productDescription: string;\r\n    public productTitle: string;\r\n    public productPrice: number;\r\n    public productQuantity: number;\r\n    public productCategories: String[];\r\n\r\n    constructor(title: string, imgSrc: string,\r\n                productWeight: string, productSize: string,\r\n                productDescription: string, price: number) {\r\n        \r\n        this.id = this.randomId(1000, 1);\r\n        this.productTitle = title;\r\n        this.imgPath = imgSrc;\r\n        this.productWeight = productWeight;\r\n        this.productSize = productSize;\r\n        this.productDescription = productDescription;\r\n        this.productPrice = price;\r\n    }\r\n    \r\n    randomId(upperLimit: number, lowerLimit: number) {\r\n        return Math.floor(Math.random() * (upperLimit - lowerLimit) + lowerLimit);\r\n    }\r\n}","import { AppRoutingModule } from './../app-routing.module';\r\nimport { SideBarComponent } from './../shared/side-bar/side-bar.component';\r\nimport { DashboardRoutingModule } from './../dashboard/dashboard-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './../shared/header/header.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { ShortenPipe } from './shorten.pipe';\r\nimport { FormatPhonePipe } from './format-phone.pipe';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoadingComponent } from './loading/loading.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n       HeaderComponent,\r\n       SideBarComponent,\r\n       ShortenPipe,\r\n       FormatPhonePipe,\r\n       FooterComponent,\r\n       LoadingComponent,     \r\n    ],\r\n    imports: [\r\n        CommonModule,  \r\n        DashboardRoutingModule\r\n    ], \r\n    exports: [\r\n        HeaderComponent,\r\n        SideBarComponent,\r\n        FormatPhonePipe,\r\n        FooterComponent,\r\n        LoadingComponent\r\n    ]\r\n\r\n})\r\nexport class SharedModule {}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shorten'\n})\nexport class ShortenPipe implements PipeTransform {\n\n  transform(value: any, limit?: any): any {\n    return limit ? value.substr(0, limit) + '.' : value;\n  }\n\n}\n","<div id=\"sideBar\">\r\n  <nav id=\"productCategory\">\r\n    \r\n    <div id=\"logo\">\r\n      <a [routerLink]=\"['/dashboard/products', 'pizza']\">\r\n        <img src=\"../../../assets/logo.png\" class=\"sideBarLogo\">\r\n      </a>\r\n    </div>\r\n    <ul>\r\n      <li routerLinkActive = \"activeTab\" [routerLink]=\"['/dashboard', 'products', 'pizza']\"><a  >{{ 'Pizza' | uppercase }}</a></li>\r\n      <li routerLinkActive = \"activeTab\" [routerLink]=\"['/dashboard/products/', 'drinks']\"><a >{{ 'Drinks' | uppercase }}</a></li>\r\n      <li routerLinkActive = \"activeTab\" [routerLink]=\"['/dashboard/products/', 'salads']\"><a >{{ 'Salads' | uppercase }}</a></li>\r\n  </ul>\r\n  </nav>\r\n</div>\r\n\r\n","import { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      //console.log(params);\r\n    })\r\n    \r\n  }\r\n\r\n}\r\n","<div id=\"editModal\">\r\n    <div id=\"editModalHeader\">\r\n        <header> \r\n            <h4 id=\"editModalTitle\">Edit profile</h4>\r\n            <button class=\"btn btn-danger\" (click)=\"closeModal()\">X</button>\r\n        </header> \r\n    </div>\r\n \r\n    <form [formGroup]=\"editForm\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"First Name\">\r\n                        First Name:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Enter First Name\"\r\n                               class=\"form-control\"\r\n                               id=\"firstName\"\r\n                               name=\"firstName\"\r\n                               formControlName=\"firstName\">\r\n                      </label>\r\n                      <div *ngIf=\"getDataByFieldName('firstName').touched\">\r\n                        <p *ngIf=\"getDataByFieldName('firstName').errors\" class=\"validationError\">First Name isn't valid!</p>\r\n                        <p *ngIf=\"getDataByFieldName('firstName')?.errors?.minlength\" class=\"validationError\">Min length should be 4 !</p>\r\n                      </div>\r\n                </div>\r\n          \r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"Last Name\">\r\n                        Last Name:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Enter Last Name\"\r\n                               class=\"form-control\"\r\n                               id=\"lastName\"\r\n                               name=\"lastName\"\r\n                               formControlName=\"lastName\">\r\n                      </label>\r\n                      <div *ngIf=\"getDataByFieldName('lastName').touched\">\r\n                        <p *ngIf=\"getDataByFieldName('lastName').errors\" class=\"validationError\">Last Name isn't valid!</p>\r\n                        <p *ngIf=\"getDataByFieldName('lastName')?.errors?.minlength\" class=\"validationError\">Min length should be 4 !</p>\r\n                      </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"phone\">\r\n                        Phone:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Enter phone\"\r\n                               class=\"form-control\"\r\n                               id=\"phone\"\r\n                               name=\"phone\"\r\n                               formControlName=\"phone\">\r\n                      </label>\r\n                      <div *ngIf=\"getDataByFieldName('phone').touched\">\r\n                        <p *ngIf=\"getDataByFieldName('phone').errors\" class=\"validationError\">Phone isn't valid!</p>\r\n                        <p *ngIf=\"getDataByFieldName('phone')?.errors?.minlength\" class=\"validationError\">Min length should be 10 !</p>\r\n                      </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"address\">\r\n                        Address:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Enter address\"\r\n                               class=\"form-control\"\r\n                               id=\"address\"\r\n                               name=\"address\"\r\n                               formControlName=\"address\">\r\n                      </label>\r\n                      <div *ngIf=\"getDataByFieldName('address').touched\">\r\n                        <p *ngIf=\"getDataByFieldName('address').errors\" class=\"validationError\">Address isn't valid!</p>\r\n                        <p *ngIf=\"getDataByFieldName('address')?.errors?.minlength\" class=\"validationError\">Min length should be 5 !</p>\r\n                      </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div formGroupName = passwords class=\"col-md-12 col-xs-12\" >\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">\r\n                        Password:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Enter password\"\r\n                               class=\"form-control\"\r\n                               id=\"password\"\r\n                               type=\"password\"\r\n                               name=\"password\"\r\n                               formControlName=\"password\">\r\n                      </label>\r\n                </div>\r\n                <div *ngIf=\"getDataByFieldName('passwords.password').touched\">\r\n                    <p *ngIf=\"getDataByFieldName('passwords.password').errors\" class=\"validationError\">Password isn't valid!</p>\r\n                    <p *ngIf=\"getDataByFieldName('passwords.password')?.errors?.minlength\" class=\"validationError\">Min length should be 4 !</p>\r\n                    <p *ngIf=\"getDataByFieldName('passwords')?.errors?.doesMatchPassword\" class=\"validationError\">Passwords don't match!</p>     \r\n                </div>\r\n               \r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-xs-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"passwordRepeat\">\r\n                        Repeat Password:\r\n                        \r\n                        <input type=\"text\"\r\n                               placeholder=\"Repeat password\"\r\n                               class=\"form-control\"\r\n                               id=\"passwordRepeat\"\r\n                               type=\"password\"\r\n                               name=\"passwordRepeat\"\r\n                               formControlName=\"passwordRepeat\">\r\n                      </label>\r\n                </div>\r\n               \r\n                <div *ngIf=\"getDataByFieldName('passwords.passwordRepeat').touched\">\r\n                    <p *ngIf=\"getDataByFieldName('passwords.passwordRepeat').errors\" class=\"validationError\">Password isn't valid!</p>\r\n                    <p *ngIf=\"getDataByFieldName('passwords.passwordRepeat')?.errors?.minlength\" class=\"validationError\">Min length should be 4 !</p>\r\n                    <p *ngIf=\"getDataByFieldName('passwords')?.errors?.doesMatchPassword\" class=\"validationError\">Passwords don't match!</p>\r\n                </div>\r\n            </div>\r\n\r\n           \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 col-xs-12 \" style=\"text-align: center\">\r\n                <button class=\"btn btn-success\"\r\n                        type=\"button\"\r\n                        (click)=\"saveChanges()\"\r\n                        [disabled]=\"!editForm.valid\">Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    \r\n   \r\n</div>\r\n","import { LoadingService } from './../../shared/services/loading.service';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  editForm: FormGroup;\r\n  id: any;\r\n  currentUser: any;\r\n\r\n  constructor(private editProfile: EditModalService,\r\n              private route: ActivatedRoute,\r\n              private authService: AuthService,\r\n              private editModal: EditModalService,\r\n              private loadingService: LoadingService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe( \r\n      (par: Params) => {\r\n        this.id = par[\"id\"];\r\n        this.currentUser = this.authService.getCurrentUser();\r\n        this.initForm();\r\n        //console.log(this.currentUser);\r\n    });\r\n  }\r\n\r\n/**\r\n * Init form on the component initialization\r\n */\r\n  initForm() {\r\n    this.editForm = new FormGroup({\r\n      'firstName': new FormControl(this.currentUser[\"firstName\"], [Validators.required, Validators.minLength(4)]),\r\n      'lastName': new FormControl(this.currentUser[\"lastName\"], [Validators.required, Validators.minLength(4)]),\r\n      'phone': new FormControl(this.currentUser[\"phone\"], [Validators.required, Validators.minLength(10)]),\r\n      'address': new FormControl(this.currentUser[\"address\"], [Validators.required, Validators.minLength(5)]),\r\n      passwords: new FormGroup({\r\n        \"password\": new FormControl('', [Validators.required, Validators.minLength(4) ]),\r\n        \"passwordRepeat\": new FormControl('', [Validators.required, Validators.minLength(4) ]),\r\n        }, {\r\n          validators: this.validatePasswords.bind(this)\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n/**\r\n * Get data from appropriate input\r\n * @param {String} control's name \r\n * @return {FormControl} return control's info\r\n */ \r\n  getDataByFieldName(data) {\r\n    return this.editForm.get(data);\r\n  }\r\n\r\n /**\r\n  * Compare 2 passwords\r\n  * @param {registrationFormGroup} password and repeated password which were entered in the edit form \r\n  * @return { Obj | null } passwords' comparison result\r\n  */ \r\n  validatePasswords(registrationFormGroup: FormGroup) {\r\n    let password = registrationFormGroup.controls.password.value;\r\n    let repeatPassword = registrationFormGroup.controls.passwordRepeat.value;\r\n  \r\n    if (repeatPassword.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    if (repeatPassword !== password) {\r\n        return {\r\n            doesMatchPassword: true\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Close modal window\r\n */\r\n  closeModal() {\r\n    this.editProfile.toggleEditMode();\r\n  }\r\n\r\n/**\r\n * Save changes after editing user's profile info \r\n */ \r\n  saveChanges() {\r\n    let formData = this.editForm.value;\r\n   \r\n    \r\n    this.authService.checkUserInfo(formData)\r\n      .subscribe(\r\n        res => {\r\n          //console.log(res);\r\n          this.loadingService.toggleLoading();\r\n           \r\n          if (res.length > 0 ) {\r\n            \r\n            this.authService.updateUserInfo(formData)\r\n              .subscribe(\r\n                res => {\r\n                \r\n                  console.log(res);\r\n                  this.closeModal();\r\n                  this.authService.updateUserData();\r\n                \r\n                },\r\n\r\n                err => {\r\n                  console.log('something went wrong!!!');\r\n                }\r\n              )\r\n          }\r\n        }, \r\n\r\n        err => {\r\n          console.log('Something went wrong!');\r\n        }\r\n      )\r\n  }\r\n}\r\n","<div id=\"orderHistoryWrapper\">\r\n    <div class=\"orderItem\" *ngFor=\"let order of orders\">\r\n      <div class=\"orderId\">№ {{ order.orderId }}</div>\r\n      <div class=\"orderDate\"> <b>Date:</b> {{ getDate(order.orderTime) }}</div>\r\n      <div class=\"totalOrderAmount\"><b>Total: </b> {{ order.totalPrice }} $</div>\r\n      <div class=\"productsQuantity\">{{ getProductsQuantity(order) }} <i>{{ getProductsQuantity(order) == 1 ? 'product' : 'products' }}</i></div> \r\n      <div class=\"orderTime\"> <b>Time:</b> {{ getTime(order.orderTime) }}</div>\r\n    </div>\r\n</div>\r\n \r\n","import { LoadingService } from '../../shared/services/loading.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { OrdersService } from 'src/app/shared/services/orders.service';\r\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-order-history',\r\n  templateUrl: './order-history.component.html',\r\n  styleUrls: ['./order-history.component.scss']\r\n})\r\nexport class OrderHistoryComponent implements OnInit, OnDestroy {\r\n  orders: Array<any>;\r\n  orderSubscription = new Subscription();\r\n  showCurrentOrderDetail: boolean = false;\r\n\r\n  constructor(private orderService: OrdersService,\r\n              private loadingService: LoadingService,\r\n              private editModal: EditModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.getOrders();\r\n  }\r\n\r\n\r\n/**\r\n * Get orders using 'orderService'\r\n */  \r\n  getOrders() {\r\n    this.loadingService.toggleLoading();\r\n    //this.loadingService.toggleLoading();\r\n    this.editModal.toggleEditMode();\r\n    \r\n    this.orderSubscription =  this.orderService.getOrders()\r\n      .subscribe(\r\n        res => {\r\n          this.orders = res;\r\n          \r\n          // setTimeout(\r\n          //   () => {\r\n              \r\n              this.editModal.toggleEditMode();\r\n              this.loadingService.toggleLoading();\r\n          //   }, 2000 \r\n          // )\r\n           \r\n        },\r\n        err => {\r\n          alert('Something went wrong!');\r\n        }\r\n      )\r\n  }\r\n\r\n/**\r\n* Get order's date\r\n* @param {String} order's date\r\n* @return {String} order's date\r\n*/   \r\n  getDate(date) {\r\n    let orderDate = (new Date(date)).toLocaleDateString();\r\n    return orderDate;\r\n  }\r\n\r\n/**\r\n* Get order's time\r\n* @param {String} order's date\r\n* @return {String} order's time\r\n*/ \r\n  getTime(date) {\r\n    let orderTime = (new Date(date)).toLocaleTimeString();\r\n    return orderTime;\r\n  }\r\n\r\n/**\r\n * Calculate products quantity\r\n * @param {Order} object which represent object\r\n * @return { number} product's quantity;\r\n */\r\n  getProductsQuantity(item) {\r\n    let productQuantity = 0; \r\n    item[\"products\"].forEach( product => {\r\n      productQuantity += product.productQuantity;\r\n    })\r\n    //console.log(item);\r\n    return productQuantity;\r\n  }\r\n\r\n/**\r\n* Destroy order's history subscription\r\n*/ \r\n  ngOnDestroy() {\r\n    this.orderSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div id=\"profileInfoWrapper\">\r\n    <div id=\"editProfile\" (click)=\"editProfile()\">Edit</div>\r\n\r\n    <div id=\"userDetail\">\r\n        <div class=\"row\" *ngFor=\"let key of objectKeys(userViewTemplate)\">\r\n            <div class=\"col-md-3\"><h5>{{key + ':' }}</h5></div>\r\n            <div class=\"col-md-6\" *ngIf=\"key != 'Phone'\"> {{ userViewTemplate[key]}}  </div>\r\n            <div class=\"col-md-6\" *ngIf=\"key == 'Phone'\"> {{ userViewTemplate[key] | formatPhone}}  </div>\r\n            <div class=\"col-md-3\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"editMode\">\r\n        <app-edit-profile></app-edit-profile>\r\n    </ng-container>\r\n     \r\n  </div>","import { EditModalService } from '../../shared/services/edit-modal.service';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { User } from 'src/app/auth/user.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-profile-detail',\r\n  templateUrl: './profile-detail.component.html',\r\n  styleUrls: ['./profile-detail.component.scss']\r\n})\r\nexport class ProfileDetailComponent implements OnInit, OnDestroy {\r\n  id: number;\r\n  editMode: any;\r\n  userData: User;\r\n  subscription: Subscription;\r\n  objectKeys = Object.keys;\r\n  userViewTemplate = {\r\n    'First Name': '',\r\n    'Last Name': '',\r\n    'Login': '',\r\n    'Phone': '',\r\n    'Email': '',\r\n    'Address': ''\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private authService: AuthService,\r\n              private editModal: EditModalService) { }\r\n\r\n  ngOnInit() {\r\n    // this.subscription = this.route.params.subscribe( (par: Params\r\n    //   ) => {\r\n    //   this.id = par[\"id\"]; \r\n    // });\r\n  //  this.id = this.route.snapshot.children[0].params.id;\r\n    // console.log(this.id);\r\n\r\n    this.userData = this.authService.getCurrentUser();\r\n    this.userDataMap();\r\n\r\n    this.editModal.onEditChange.subscribe(\r\n      res => {\r\n        // console.log('Edit mode - true');\r\n        this.editMode = res;\r\n      }\r\n    );\r\n  }\r\n\r\n /**\r\n  * Map appropriate values getted from 'authService' with values from viewModel\r\n  */\r\n  userDataMap() {\r\n     this.userViewTemplate['First Name'] = this.userData.firstName;\r\n     this.userViewTemplate['Last Name'] = this.userData.lastName;\r\n     this.userViewTemplate['Login'] = this.userData.login;\r\n     this.userViewTemplate['Phone'] = this.userData.phone;\r\n     this.userViewTemplate['Email'] = this.userData.email;\r\n     this.userViewTemplate['Address'] = this.userData.address;\r\n  }\r\n\r\n/**\r\n *  Show modal window for editting user data\r\n */\r\n  editProfile() {\r\n    console.log('Edit Profile ' + this.id);\r\n    this.editModal.toggleEditMode();\r\n  }\r\n\r\n/**\r\n * Destroy subsription\r\n */\r\n  ngOnDestroy() {\r\n    // this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { DashboardRoutingModule } from './../dashboard/dashboard-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProfileDetailComponent } from './profile-detail/profile-detail.component';\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { OrderHistoryComponent } from './order-history/order-history.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProfileComponent,\r\n        ProfileDetailComponent,\r\n        EditProfileComponent,\r\n        OrderHistoryComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        DashboardRoutingModule\r\n    ],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class ProfileModule {}\r\n","<div id=\"profileInfoWrapper\">\r\n    <ul id=\"profileNav\">\r\n        <li routerLinkActive=\"activeTabs\">\r\n            <a [routerLink]=\"['user-info']\">Profile Info</a>\r\n        </li>\r\n\r\n        <li routerLinkActive=\"activeTabs\">\r\n            <a [routerLink]=\"['order-history']\">Order History</a>\r\n        </li>\r\n        \r\n    </ul>\r\n    <router-outlet></router-outlet>\r\n</div>","import { Subscription } from 'rxjs';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { User } from './../../auth/user.model';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { EditModalService } from 'src/app/shared/services/edit-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  id: number;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private authService: AuthService,\r\n              private editModal: EditModalService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // It's not used\r\n  navigateToOrderHistory() {\r\n    this.router.navigate(['dashboard/profile/order-history']);\r\n    console.log('here');\r\n  }\r\n\r\n  // It's not used\r\n  navigateToProfile() {\r\n    this.router.navigate([`dashboard/profile/`]);\r\n    console.log('here2');\r\n    console.log(this.id);\r\n  }\r\n}\r\n"],"sourceRoot":""}